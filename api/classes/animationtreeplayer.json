{"name":"AnimationTreePlayer","parent":"Node","comment":"[i]Deprecated.[/i] Animation player that uses a node graph for blending animations. Superseded by [AnimationTree].","des":"","const":[],"enums":[{"name":"NodeType","value":[{"key":"NODE_OUTPUT = 0"},{"key":"NODE_ANIMATION = 1"},{"key":"NODE_ONESHOT = 2"},{"key":"NODE_MIX = 3"},{"key":"NODE_BLEND2 = 4"},{"key":"NODE_BLEND3 = 5"},{"key":"NODE_BLEND4 = 6"},{"key":"NODE_TIMESCALE = 7"},{"key":"NODE_TIMESEEK = 8"},{"key":"NODE_TRANSITION = 9"}]},{"name":"AnimationProcessMode","value":[{"key":"ANIMATION_PROCESS_PHYSICS = 0"},{"key":"ANIMATION_PROCESS_IDLE = 1"}]}],"props":[{"name":"active","prop":"bool active  = false","setget":"true"},{"name":"base_path","prop":"NodePath base_path  = NodePath(&quot;..&quot;)","setget":"true"},{"name":"master_player","prop":"NodePath master_player  = NodePath(&quot;&quot;)","setget":"true"},{"name":"playback_process_mode","prop":"int playback_process_mode  = 1","setget":"true"}],"setters":["set_active(bool value)","set_base_path(NodePath value)","set_master_player(NodePath value)","set_animation_process_mode(int value)"],"getters":["bool is_active()","NodePath get_base_path()","NodePath get_master_player()","int get_animation_process_mode()"],"methods":[{"name":"add_node","fun":" void add_node(AnimationTreePlayer.NodeType type,String id)"},{"name":"advance","fun":" void advance(float delta)"},{"name":"animation_node_get_animation","fun":"const Animation animation_node_get_animation(String id)"},{"name":"animation_node_get_master_animation","fun":"const String animation_node_get_master_animation(String id)"},{"name":"animation_node_get_position","fun":"const float animation_node_get_position(String id)"},{"name":"animation_node_set_animation","fun":" void animation_node_set_animation(String id,Animation animation)"},{"name":"animation_node_set_filter_path","fun":" void animation_node_set_filter_path(String id,NodePath path,bool enable)"},{"name":"animation_node_set_master_animation","fun":" void animation_node_set_master_animation(String id,String source)"},{"name":"are_nodes_connected","fun":"const bool are_nodes_connected(String id,String dst_id,int dst_input_idx)"},{"name":"blend2_node_get_amount","fun":"const float blend2_node_get_amount(String id)"},{"name":"blend2_node_set_amount","fun":" void blend2_node_set_amount(String id,float blend)"},{"name":"blend2_node_set_filter_path","fun":" void blend2_node_set_filter_path(String id,NodePath path,bool enable)"},{"name":"blend3_node_get_amount","fun":"const float blend3_node_get_amount(String id)"},{"name":"blend3_node_set_amount","fun":" void blend3_node_set_amount(String id,float blend)"},{"name":"blend4_node_get_amount","fun":"const Vector2 blend4_node_get_amount(String id)"},{"name":"blend4_node_set_amount","fun":" void blend4_node_set_amount(String id,Vector2 blend)"},{"name":"connect_nodes","fun":" int connect_nodes(String id,String dst_id,int dst_input_idx)"},{"name":"disconnect_nodes","fun":" void disconnect_nodes(String id,int dst_input_idx)"},{"name":"get_node_list","fun":" PoolStringArray get_node_list()"},{"name":"mix_node_get_amount","fun":"const float mix_node_get_amount(String id)"},{"name":"mix_node_set_amount","fun":" void mix_node_set_amount(String id,float ratio)"},{"name":"node_exists","fun":"const bool node_exists(String node)"},{"name":"node_get_input_count","fun":"const int node_get_input_count(String id)"},{"name":"node_get_input_source","fun":"const String node_get_input_source(String id,int idx)"},{"name":"node_get_position","fun":"const Vector2 node_get_position(String id)"},{"name":"node_get_type","fun":"const int node_get_type(String id)"},{"name":"node_rename","fun":" int node_rename(String node,String new_name)"},{"name":"node_set_position","fun":" void node_set_position(String id,Vector2 screen_position)"},{"name":"oneshot_node_get_autorestart_delay","fun":"const float oneshot_node_get_autorestart_delay(String id)"},{"name":"oneshot_node_get_autorestart_random_delay","fun":"const float oneshot_node_get_autorestart_random_delay(String id)"},{"name":"oneshot_node_get_fadein_time","fun":"const float oneshot_node_get_fadein_time(String id)"},{"name":"oneshot_node_get_fadeout_time","fun":"const float oneshot_node_get_fadeout_time(String id)"},{"name":"oneshot_node_has_autorestart","fun":"const bool oneshot_node_has_autorestart(String id)"},{"name":"oneshot_node_is_active","fun":"const bool oneshot_node_is_active(String id)"},{"name":"oneshot_node_set_autorestart","fun":" void oneshot_node_set_autorestart(String id,bool enable)"},{"name":"oneshot_node_set_autorestart_delay","fun":" void oneshot_node_set_autorestart_delay(String id,float delay_sec)"},{"name":"oneshot_node_set_autorestart_random_delay","fun":" void oneshot_node_set_autorestart_random_delay(String id,float rand_sec)"},{"name":"oneshot_node_set_fadein_time","fun":" void oneshot_node_set_fadein_time(String id,float time_sec)"},{"name":"oneshot_node_set_fadeout_time","fun":" void oneshot_node_set_fadeout_time(String id,float time_sec)"},{"name":"oneshot_node_set_filter_path","fun":" void oneshot_node_set_filter_path(String id,NodePath path,bool enable)"},{"name":"oneshot_node_start","fun":" void oneshot_node_start(String id)"},{"name":"oneshot_node_stop","fun":" void oneshot_node_stop(String id)"},{"name":"recompute_caches","fun":" void recompute_caches()"},{"name":"remove_node","fun":" void remove_node(String id)"},{"name":"reset","fun":" void reset()"},{"name":"timescale_node_get_scale","fun":"const float timescale_node_get_scale(String id)"},{"name":"timescale_node_set_scale","fun":" void timescale_node_set_scale(String id,float scale)"},{"name":"timeseek_node_seek","fun":" void timeseek_node_seek(String id,float seconds)"},{"name":"transition_node_delete_input","fun":" void transition_node_delete_input(String id,int input_idx)"},{"name":"transition_node_get_current","fun":"const int transition_node_get_current(String id)"},{"name":"transition_node_get_input_count","fun":"const int transition_node_get_input_count(String id)"},{"name":"transition_node_get_xfade_time","fun":"const float transition_node_get_xfade_time(String id)"},{"name":"transition_node_has_input_auto_advance","fun":"const bool transition_node_has_input_auto_advance(String id,int input_idx)"},{"name":"transition_node_set_current","fun":" void transition_node_set_current(String id,int input_idx)"},{"name":"transition_node_set_input_auto_advance","fun":" void transition_node_set_input_auto_advance(String id,int input_idx,bool enable)"},{"name":"transition_node_set_input_count","fun":" void transition_node_set_input_count(String id,int count)"},{"name":"transition_node_set_xfade_time","fun":" void transition_node_set_xfade_time(String id,float time_sec)"}],"signals":[]}