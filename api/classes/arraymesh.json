{"name":"ArrayMesh","parent":"Mesh","comment":"[Mesh] type that provides utility for constructing a surface from arrays.","des":"","const":[{"name":"NO_INDEX_ARRAY","value":"-1"},{"name":"ARRAY_WEIGHTS_SIZE","value":"4"}],"enums":[{"name":"ArrayType","value":[{"key":"ARRAY_VERTEX = 0"},{"key":"ARRAY_NORMAL = 1"},{"key":"ARRAY_TANGENT = 2"},{"key":"ARRAY_COLOR = 3"},{"key":"ARRAY_TEX_UV = 4"},{"key":"ARRAY_TEX_UV2 = 5"},{"key":"ARRAY_BONES = 6"},{"key":"ARRAY_WEIGHTS = 7"},{"key":"ARRAY_INDEX = 8"},{"key":"ARRAY_MAX = 9"}]},{"name":"ArrayFormat","value":[{"key":"ARRAY_FORMAT_VERTEX = 1"},{"key":"ARRAY_FORMAT_NORMAL = 2"},{"key":"ARRAY_FORMAT_TANGENT = 4"},{"key":"ARRAY_FORMAT_COLOR = 8"},{"key":"ARRAY_FORMAT_TEX_UV = 16"},{"key":"ARRAY_FORMAT_TEX_UV2 = 32"},{"key":"ARRAY_FORMAT_BONES = 64"},{"key":"ARRAY_FORMAT_WEIGHTS = 128"},{"key":"ARRAY_FORMAT_INDEX = 256"}]}],"props":[{"name":"blend_shape_mode","prop":"int blend_shape_mode  = 1","setget":"true"},{"name":"custom_aabb","prop":"AABB custom_aabb  = AABB( 0, 0, 0, 0, 0, 0 )","setget":"true"}],"setters":["set_blend_shape_mode(int value)","set_custom_aabb(AABB value)"],"getters":["int get_blend_shape_mode()","AABB get_custom_aabb()"],"methods":[{"name":"add_blend_shape","fun":" void add_blend_shape(String name)"},{"name":"add_surface_from_arrays","fun":" void add_surface_from_arrays(Mesh.PrimitiveType primitive,Array arrays,Array blend_shapes=[  ],int compress_flags=2194432)"},{"name":"clear_blend_shapes","fun":" void clear_blend_shapes()"},{"name":"clear_surfaces","fun":" void clear_surfaces()"},{"name":"get_blend_shape_count","fun":"const int get_blend_shape_count()"},{"name":"get_blend_shape_name","fun":"const String get_blend_shape_name(int index)"},{"name":"lightmap_unwrap","fun":" int lightmap_unwrap(Transform transform,float texel_size)"},{"name":"regen_normalmaps","fun":" void regen_normalmaps()"},{"name":"set_blend_shape_name","fun":" void set_blend_shape_name(int index,String name)"},{"name":"surface_find_by_name","fun":"const int surface_find_by_name(String name)"},{"name":"surface_get_array_index_len","fun":"const int surface_get_array_index_len(int surf_idx)"},{"name":"surface_get_array_len","fun":"const int surface_get_array_len(int surf_idx)"},{"name":"surface_get_format","fun":"const int surface_get_format(int surf_idx)"},{"name":"surface_get_name","fun":"const String surface_get_name(int surf_idx)"},{"name":"surface_get_primitive_type","fun":"const int surface_get_primitive_type(int surf_idx)"},{"name":"surface_remove","fun":" void surface_remove(int surf_idx)"},{"name":"surface_set_name","fun":" void surface_set_name(int surf_idx,String name)"},{"name":"surface_update_region","fun":" void surface_update_region(int surf_idx,int offset,PoolByteArray data)"}],"signals":[]}