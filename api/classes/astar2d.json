{"name":"AStar2D","parent":"Reference","comment":"AStar class representation that uses 2D vectors as edges.","des":"","const":[],"enums":[],"props":[],"setters":[],"getters":[],"methods":[{"name":"_compute_cost","fun":"virtual float _compute_cost(int from_id,int to_id)"},{"name":"_estimate_cost","fun":"virtual float _estimate_cost(int from_id,int to_id)"},{"name":"add_point","fun":" void add_point(int id,Vector2 position,float weight_scale=1.0)"},{"name":"are_points_connected","fun":"const bool are_points_connected(int id,int to_id)"},{"name":"clear","fun":" void clear()"},{"name":"connect_points","fun":" void connect_points(int id,int to_id,bool bidirectional=true)"},{"name":"disconnect_points","fun":" void disconnect_points(int id,int to_id)"},{"name":"get_available_point_id","fun":"const int get_available_point_id()"},{"name":"get_closest_point","fun":"const int get_closest_point(Vector2 to_position,bool include_disabled=false)"},{"name":"get_closest_position_in_segment","fun":"const Vector2 get_closest_position_in_segment(Vector2 to_position)"},{"name":"get_id_path","fun":" PoolIntArray get_id_path(int from_id,int to_id)"},{"name":"get_point_capacity","fun":"const int get_point_capacity()"},{"name":"get_point_connections","fun":" PoolIntArray get_point_connections(int id)"},{"name":"get_point_count","fun":"const int get_point_count()"},{"name":"get_point_path","fun":" PoolVector2Array get_point_path(int from_id,int to_id)"},{"name":"get_point_position","fun":"const Vector2 get_point_position(int id)"},{"name":"get_point_weight_scale","fun":"const float get_point_weight_scale(int id)"},{"name":"get_points","fun":" Array get_points()"},{"name":"has_point","fun":"const bool has_point(int id)"},{"name":"is_point_disabled","fun":"const bool is_point_disabled(int id)"},{"name":"remove_point","fun":" void remove_point(int id)"},{"name":"reserve_space","fun":" void reserve_space(int num_nodes)"},{"name":"set_point_disabled","fun":" void set_point_disabled(int id,bool disabled=true)"},{"name":"set_point_position","fun":" void set_point_position(int id,Vector2 position)"},{"name":"set_point_weight_scale","fun":" void set_point_weight_scale(int id,float weight_scale)"}],"signals":[]}