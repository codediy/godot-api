{"name":"CollisionObject","parent":"Spatial","comment":"Base node for collision objects.","des":"","const":[],"enums":[],"props":[{"name":"collision_layer","prop":"int collision_layer  = 1","setget":"true"},{"name":"collision_mask","prop":"int collision_mask  = 1","setget":"true"},{"name":"input_capture_on_drag","prop":"bool input_capture_on_drag  = false","setget":"true"},{"name":"input_ray_pickable","prop":"bool input_ray_pickable  = true","setget":"true"}],"setters":["set_collision_layer(int value)","set_collision_mask(int value)","set_capture_input_on_drag(bool value)","set_ray_pickable(bool value)"],"getters":["int get_collision_layer()","int get_collision_mask()","bool get_capture_input_on_drag()","bool is_ray_pickable()"],"methods":[{"name":"_input_event","fun":"virtual void _input_event(Object camera,InputEvent event,Vector3 position,Vector3 normal,int shape_idx)"},{"name":"create_shape_owner","fun":" int create_shape_owner(Object owner)"},{"name":"get_collision_layer_bit","fun":"const bool get_collision_layer_bit(int bit)"},{"name":"get_collision_mask_bit","fun":"const bool get_collision_mask_bit(int bit)"},{"name":"get_rid","fun":"const RID get_rid()"},{"name":"get_shape_owners","fun":" Array get_shape_owners()"},{"name":"is_shape_owner_disabled","fun":"const bool is_shape_owner_disabled(int owner_id)"},{"name":"remove_shape_owner","fun":" void remove_shape_owner(int owner_id)"},{"name":"set_collision_layer_bit","fun":" void set_collision_layer_bit(int bit,bool value)"},{"name":"set_collision_mask_bit","fun":" void set_collision_mask_bit(int bit,bool value)"},{"name":"shape_find_owner","fun":"const int shape_find_owner(int shape_index)"},{"name":"shape_owner_add_shape","fun":" void shape_owner_add_shape(int owner_id,Shape shape)"},{"name":"shape_owner_clear_shapes","fun":" void shape_owner_clear_shapes(int owner_id)"},{"name":"shape_owner_get_owner","fun":"const Object shape_owner_get_owner(int owner_id)"},{"name":"shape_owner_get_shape","fun":"const Shape shape_owner_get_shape(int owner_id,int shape_id)"},{"name":"shape_owner_get_shape_count","fun":"const int shape_owner_get_shape_count(int owner_id)"},{"name":"shape_owner_get_shape_index","fun":"const int shape_owner_get_shape_index(int owner_id,int shape_id)"},{"name":"shape_owner_get_transform","fun":"const Transform shape_owner_get_transform(int owner_id)"},{"name":"shape_owner_remove_shape","fun":" void shape_owner_remove_shape(int owner_id,int shape_id)"},{"name":"shape_owner_set_disabled","fun":" void shape_owner_set_disabled(int owner_id,bool disabled)"},{"name":"shape_owner_set_transform","fun":" void shape_owner_set_transform(int owner_id,Transform transform)"}],"signals":[{"name":"input_event","fun":"input_event(Node camera,InputEvent event,Vector3 position,Vector3 normal,int shape_idx)"},{"name":"mouse_entered","fun":"mouse_entered()"},{"name":"mouse_exited","fun":"mouse_exited()"}]}