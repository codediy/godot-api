{"name":"Crypto","parent":"Reference","comment":"Access to advanced cryptographic functionalities.","des":"","const":[],"enums":[],"props":[],"setters":[],"getters":[],"methods":[{"name":"constant_time_compare","fun":" bool constant_time_compare(PoolByteArray trusted,PoolByteArray received)"},{"name":"decrypt","fun":" PoolByteArray decrypt(CryptoKey key,PoolByteArray ciphertext)"},{"name":"encrypt","fun":" PoolByteArray encrypt(CryptoKey key,PoolByteArray plaintext)"},{"name":"generate_random_bytes","fun":" PoolByteArray generate_random_bytes(int size)"},{"name":"generate_rsa","fun":" CryptoKey generate_rsa(int size)"},{"name":"generate_self_signed_certificate","fun":" X509Certificate generate_self_signed_certificate(CryptoKey key,String issuer_name=&quot;CN=myserver,O=myorganisation,C=IT&quot;,String not_before=&quot;20140101000000&quot;,String not_after=&quot;20340101000000&quot;)"},{"name":"hmac_digest","fun":" PoolByteArray hmac_digest(HashingContext.HashType hash_type,PoolByteArray key,PoolByteArray msg)"},{"name":"sign","fun":" PoolByteArray sign(HashingContext.HashType hash_type,PoolByteArray hash,CryptoKey key)"},{"name":"verify","fun":" bool verify(HashingContext.HashType hash_type,PoolByteArray hash,PoolByteArray signature,CryptoKey key)"}],"signals":[]}