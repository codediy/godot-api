{"name":"Curve3D","parent":"Resource","comment":"Describes a BÃ©zier curve in 3D space.","des":"","const":[],"enums":[],"props":[{"name":"bake_interval","prop":"float bake_interval  = 0.2","setget":"true"},{"name":"up_vector_enabled","prop":"bool up_vector_enabled  = true","setget":"true"}],"setters":["set_bake_interval(float value)","set_up_vector_enabled(bool value)"],"getters":["float get_bake_interval()","bool is_up_vector_enabled()"],"methods":[{"name":"add_point","fun":" void add_point(Vector3 position,Vector3 in=Vector3( 0, 0, 0 ),Vector3 out=Vector3( 0, 0, 0 ),int at_position=-1)"},{"name":"clear_points","fun":" void clear_points()"},{"name":"get_baked_length","fun":"const float get_baked_length()"},{"name":"get_baked_points","fun":"const PoolVector3Array get_baked_points()"},{"name":"get_baked_tilts","fun":"const PoolRealArray get_baked_tilts()"},{"name":"get_baked_up_vectors","fun":"const PoolVector3Array get_baked_up_vectors()"},{"name":"get_closest_offset","fun":"const float get_closest_offset(Vector3 to_point)"},{"name":"get_closest_point","fun":"const Vector3 get_closest_point(Vector3 to_point)"},{"name":"get_point_count","fun":"const int get_point_count()"},{"name":"get_point_in","fun":"const Vector3 get_point_in(int idx)"},{"name":"get_point_out","fun":"const Vector3 get_point_out(int idx)"},{"name":"get_point_position","fun":"const Vector3 get_point_position(int idx)"},{"name":"get_point_tilt","fun":"const float get_point_tilt(int idx)"},{"name":"interpolate","fun":"const Vector3 interpolate(int idx,float t)"},{"name":"interpolate_baked","fun":"const Vector3 interpolate_baked(float offset,bool cubic=false)"},{"name":"interpolate_baked_up_vector","fun":"const Vector3 interpolate_baked_up_vector(float offset,bool apply_tilt=false)"},{"name":"interpolatef","fun":"const Vector3 interpolatef(float fofs)"},{"name":"remove_point","fun":" void remove_point(int idx)"},{"name":"set_point_in","fun":" void set_point_in(int idx,Vector3 position)"},{"name":"set_point_out","fun":" void set_point_out(int idx,Vector3 position)"},{"name":"set_point_position","fun":" void set_point_position(int idx,Vector3 position)"},{"name":"set_point_tilt","fun":" void set_point_tilt(int idx,float tilt)"},{"name":"tessellate","fun":"const PoolVector3Array tessellate(int max_stages=5,float tolerance_degrees=4)"}],"signals":[]}