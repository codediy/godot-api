{"name":"Engine","parent":"Object","comment":"Access to engine properties.","des":"","const":[],"enums":[],"props":[{"name":"editor_hint","prop":"bool editor_hint  = true","setget":"true"},{"name":"iterations_per_second","prop":"int iterations_per_second  = 60","setget":"true"},{"name":"physics_jitter_fix","prop":"float physics_jitter_fix  = 0.5","setget":"true"},{"name":"print_error_messages","prop":"bool print_error_messages  = true","setget":"true"},{"name":"target_fps","prop":"int target_fps  = 0","setget":"true"},{"name":"time_scale","prop":"float time_scale  = 1.0","setget":"true"}],"setters":["set_editor_hint(bool value)","set_iterations_per_second(int value)","set_physics_jitter_fix(float value)","set_print_error_messages(bool value)","set_target_fps(int value)","set_time_scale(float value)"],"getters":["bool is_editor_hint()","int get_iterations_per_second()","float get_physics_jitter_fix()","bool is_printing_error_messages()","int get_target_fps()","float get_time_scale()"],"methods":[{"name":"get_author_info","fun":"const Dictionary get_author_info()"},{"name":"get_copyright_info","fun":"const Array get_copyright_info()"},{"name":"get_donor_info","fun":"const Dictionary get_donor_info()"},{"name":"get_frames_drawn","fun":" int get_frames_drawn()"},{"name":"get_frames_per_second","fun":"const float get_frames_per_second()"},{"name":"get_idle_frames","fun":"const int get_idle_frames()"},{"name":"get_license_info","fun":"const Dictionary get_license_info()"},{"name":"get_license_text","fun":"const String get_license_text()"},{"name":"get_main_loop","fun":"const MainLoop get_main_loop()"},{"name":"get_physics_frames","fun":"const int get_physics_frames()"},{"name":"get_physics_interpolation_fraction","fun":"const float get_physics_interpolation_fraction()"},{"name":"get_singleton","fun":"const Object get_singleton(String name)"},{"name":"get_version_info","fun":"const Dictionary get_version_info()"},{"name":"has_singleton","fun":"const bool has_singleton(String name)"},{"name":"is_in_physics_frame","fun":"const bool is_in_physics_frame()"}],"signals":[]}