{"name":"Geometry","parent":"Object","comment":"Helper node to calculate generic geometry operations.","des":"","const":[],"enums":[{"name":"PolyBooleanOperation","value":[{"key":"OPERATION_UNION = 0"},{"key":"OPERATION_DIFFERENCE = 1"},{"key":"OPERATION_INTERSECTION = 2"},{"key":"OPERATION_XOR = 3"}]},{"name":"PolyJoinType","value":[{"key":"JOIN_SQUARE = 0"},{"key":"JOIN_ROUND = 1"},{"key":"JOIN_MITER = 2"}]},{"name":"PolyEndType","value":[{"key":"END_POLYGON = 0"},{"key":"END_JOINED = 1"},{"key":"END_BUTT = 2"},{"key":"END_SQUARE = 3"},{"key":"END_ROUND = 4"}]}],"props":[],"setters":[],"getters":[],"methods":[{"name":"build_box_planes","fun":" Array build_box_planes(Vector3 extents)"},{"name":"build_capsule_planes","fun":" Array build_capsule_planes(float radius,float height,int sides,int lats,Vector3.Axis axis=2)"},{"name":"build_cylinder_planes","fun":" Array build_cylinder_planes(float radius,float height,int sides,Vector3.Axis axis=2)"},{"name":"clip_polygon","fun":" PoolVector3Array clip_polygon(PoolVector3Array points,Plane plane)"},{"name":"clip_polygons_2d","fun":" Array clip_polygons_2d(PoolVector2Array polygon_a,PoolVector2Array polygon_b)"},{"name":"clip_polyline_with_polygon_2d","fun":" Array clip_polyline_with_polygon_2d(PoolVector2Array polyline,PoolVector2Array polygon)"},{"name":"convex_hull_2d","fun":" PoolVector2Array convex_hull_2d(PoolVector2Array points)"},{"name":"exclude_polygons_2d","fun":" Array exclude_polygons_2d(PoolVector2Array polygon_a,PoolVector2Array polygon_b)"},{"name":"get_closest_point_to_segment","fun":" Vector3 get_closest_point_to_segment(Vector3 point,Vector3 s1,Vector3 s2)"},{"name":"get_closest_point_to_segment_2d","fun":" Vector2 get_closest_point_to_segment_2d(Vector2 point,Vector2 s1,Vector2 s2)"},{"name":"get_closest_point_to_segment_uncapped","fun":" Vector3 get_closest_point_to_segment_uncapped(Vector3 point,Vector3 s1,Vector3 s2)"},{"name":"get_closest_point_to_segment_uncapped_2d","fun":" Vector2 get_closest_point_to_segment_uncapped_2d(Vector2 point,Vector2 s1,Vector2 s2)"},{"name":"get_closest_points_between_segments","fun":" PoolVector3Array get_closest_points_between_segments(Vector3 p1,Vector3 p2,Vector3 q1,Vector3 q2)"},{"name":"get_closest_points_between_segments_2d","fun":" PoolVector2Array get_closest_points_between_segments_2d(Vector2 p1,Vector2 q1,Vector2 p2,Vector2 q2)"},{"name":"get_uv84_normal_bit","fun":" int get_uv84_normal_bit(Vector3 normal)"},{"name":"intersect_polygons_2d","fun":" Array intersect_polygons_2d(PoolVector2Array polygon_a,PoolVector2Array polygon_b)"},{"name":"intersect_polyline_with_polygon_2d","fun":" Array intersect_polyline_with_polygon_2d(PoolVector2Array polyline,PoolVector2Array polygon)"},{"name":"is_point_in_circle","fun":" bool is_point_in_circle(Vector2 point,Vector2 circle_position,float circle_radius)"},{"name":"is_point_in_polygon","fun":" bool is_point_in_polygon(Vector2 point,PoolVector2Array polygon)"},{"name":"is_polygon_clockwise","fun":" bool is_polygon_clockwise(PoolVector2Array polygon)"},{"name":"line_intersects_line_2d","fun":" Variant line_intersects_line_2d(Vector2 from_a,Vector2 dir_a,Vector2 from_b,Vector2 dir_b)"},{"name":"make_atlas","fun":" Dictionary make_atlas(PoolVector2Array sizes)"},{"name":"merge_polygons_2d","fun":" Array merge_polygons_2d(PoolVector2Array polygon_a,PoolVector2Array polygon_b)"},{"name":"offset_polygon_2d","fun":" Array offset_polygon_2d(PoolVector2Array polygon,float delta,Geometry.PolyJoinType join_type=0)"},{"name":"offset_polyline_2d","fun":" Array offset_polyline_2d(PoolVector2Array polyline,float delta,Geometry.PolyJoinType join_type=0,Geometry.PolyEndType end_type=3)"},{"name":"point_is_inside_triangle","fun":"const bool point_is_inside_triangle(Vector2 point,Vector2 a,Vector2 b,Vector2 c)"},{"name":"ray_intersects_triangle","fun":" Variant ray_intersects_triangle(Vector3 from,Vector3 dir,Vector3 a,Vector3 b,Vector3 c)"},{"name":"segment_intersects_circle","fun":" float segment_intersects_circle(Vector2 segment_from,Vector2 segment_to,Vector2 circle_position,float circle_radius)"},{"name":"segment_intersects_convex","fun":" PoolVector3Array segment_intersects_convex(Vector3 from,Vector3 to,Array planes)"},{"name":"segment_intersects_cylinder","fun":" PoolVector3Array segment_intersects_cylinder(Vector3 from,Vector3 to,float height,float radius)"},{"name":"segment_intersects_segment_2d","fun":" Variant segment_intersects_segment_2d(Vector2 from_a,Vector2 to_a,Vector2 from_b,Vector2 to_b)"},{"name":"segment_intersects_sphere","fun":" PoolVector3Array segment_intersects_sphere(Vector3 from,Vector3 to,Vector3 sphere_position,float sphere_radius)"},{"name":"segment_intersects_triangle","fun":" Variant segment_intersects_triangle(Vector3 from,Vector3 to,Vector3 a,Vector3 b,Vector3 c)"},{"name":"triangulate_delaunay_2d","fun":" PoolIntArray triangulate_delaunay_2d(PoolVector2Array points)"},{"name":"triangulate_polygon","fun":" PoolIntArray triangulate_polygon(PoolVector2Array polygon)"}],"signals":[]}