{"name":"GraphEdit","parent":"Control","comment":"GraphEdit is an area capable of showing various GraphNodes. It manages connection events between them.","des":"","const":[],"enums":[],"props":[{"name":"focus_mode","prop":"int focus_mode  = 2","setget":"true"},{"name":"minimap_enabled","prop":"bool minimap_enabled  = true","setget":"true"},{"name":"minimap_opacity","prop":"float minimap_opacity  = 0.65","setget":"true"},{"name":"minimap_size","prop":"Vector2 minimap_size  = Vector2( 240, 160 )","setget":"true"},{"name":"rect_clip_content","prop":"bool rect_clip_content  = true","setget":"true"},{"name":"right_disconnects","prop":"bool right_disconnects  = false","setget":"true"},{"name":"scroll_offset","prop":"Vector2 scroll_offset  = Vector2( 0, 0 )","setget":"true"},{"name":"show_zoom_label","prop":"bool show_zoom_label  = false","setget":"true"},{"name":"snap_distance","prop":"int snap_distance  = 20","setget":"true"},{"name":"use_snap","prop":"bool use_snap  = true","setget":"true"},{"name":"zoom","prop":"float zoom  = 1.0","setget":"true"},{"name":"zoom_max","prop":"float zoom_max  = 2.0736","setget":"true"},{"name":"zoom_min","prop":"float zoom_min  = 0.232568","setget":"true"},{"name":"zoom_step","prop":"float zoom_step  = 1.2","setget":"true"}],"setters":["set_focus_mode(int value)","set_minimap_enabled(bool value)","set_minimap_opacity(float value)","set_minimap_size(Vector2 value)","set_clip_contents(bool value)","set_right_disconnects(bool value)","set_scroll_ofs(Vector2 value)","set_show_zoom_label(bool value)","set_snap(int value)","set_use_snap(bool value)","set_zoom(float value)","set_zoom_max(float value)","set_zoom_min(float value)","set_zoom_step(float value)"],"getters":["int get_focus_mode()","bool is_minimap_enabled()","float get_minimap_opacity()","Vector2 get_minimap_size()","bool is_clipping_contents()","bool is_right_disconnects_enabled()","Vector2 get_scroll_ofs()","bool is_showing_zoom_label()","int get_snap()","bool is_using_snap()","float get_zoom()","float get_zoom_max()","float get_zoom_min()","float get_zoom_step()"],"methods":[{"name":"add_valid_connection_type","fun":" void add_valid_connection_type(int from_type,int to_type)"},{"name":"add_valid_left_disconnect_type","fun":" void add_valid_left_disconnect_type(int type)"},{"name":"add_valid_right_disconnect_type","fun":" void add_valid_right_disconnect_type(int type)"},{"name":"clear_connections","fun":" void clear_connections()"},{"name":"connect_node","fun":" int connect_node(String from,int from_port,String to,int to_port)"},{"name":"disconnect_node","fun":" void disconnect_node(String from,int from_port,String to,int to_port)"},{"name":"get_connection_list","fun":"const Array get_connection_list()"},{"name":"get_zoom_hbox","fun":" HBoxContainer get_zoom_hbox()"},{"name":"is_node_connected","fun":" bool is_node_connected(String from,int from_port,String to,int to_port)"},{"name":"is_valid_connection_type","fun":"const bool is_valid_connection_type(int from_type,int to_type)"},{"name":"remove_valid_connection_type","fun":" void remove_valid_connection_type(int from_type,int to_type)"},{"name":"remove_valid_left_disconnect_type","fun":" void remove_valid_left_disconnect_type(int type)"},{"name":"remove_valid_right_disconnect_type","fun":" void remove_valid_right_disconnect_type(int type)"},{"name":"set_connection_activity","fun":" void set_connection_activity(String from,int from_port,String to,int to_port,float amount)"},{"name":"set_selected","fun":" void set_selected(Node node)"}],"signals":[{"name":"_begin_node_move","fun":"_begin_node_move()"},{"name":"_end_node_move","fun":"_end_node_move()"},{"name":"connection_from_empty","fun":"connection_from_empty(String to,int to_slot,Vector2 release_position)"},{"name":"connection_request","fun":"connection_request(String from,int from_slot,String to,int to_slot)"},{"name":"connection_to_empty","fun":"connection_to_empty(String from,int from_slot,Vector2 release_position)"},{"name":"copy_nodes_request","fun":"copy_nodes_request()"},{"name":"delete_nodes_request","fun":"delete_nodes_request()"},{"name":"disconnection_request","fun":"disconnection_request(String from,int from_slot,String to,int to_slot)"},{"name":"duplicate_nodes_request","fun":"duplicate_nodes_request()"},{"name":"node_selected","fun":"node_selected(Node node)"},{"name":"node_unselected","fun":"node_unselected(Node node)"},{"name":"paste_nodes_request","fun":"paste_nodes_request()"},{"name":"popup_request","fun":"popup_request(Vector2 position)"},{"name":"scroll_offset_changed","fun":"scroll_offset_changed(Vector2 ofs)"}]}