{"name":"GraphNode","parent":"Container","comment":"A GraphNode is a container with potentially several input and output slots allowing connections between GraphNodes. Slots can have different, incompatible types.","des":"","const":[],"enums":[{"name":"Overlay","value":[{"key":"OVERLAY_DISABLED = 0"},{"key":"OVERLAY_BREAKPOINT = 1"},{"key":"OVERLAY_POSITION = 2"}]}],"props":[{"name":"comment","prop":"bool comment  = false","setget":"true"},{"name":"offset","prop":"Vector2 offset  = Vector2( 0, 0 )","setget":"true"},{"name":"overlay","prop":"int overlay  = 0","setget":"true"},{"name":"resizable","prop":"bool resizable  = false","setget":"true"},{"name":"selected","prop":"bool selected  = false","setget":"true"},{"name":"show_close","prop":"bool show_close  = false","setget":"true"},{"name":"title","prop":"String title  = &quot;&quot;","setget":"true"}],"setters":["set_comment(bool value)","set_offset(Vector2 value)","set_overlay(int value)","set_resizable(bool value)","set_selected(bool value)","set_show_close_button(bool value)","set_title(String value)"],"getters":["bool is_comment()","Vector2 get_offset()","int get_overlay()","bool is_resizable()","bool is_selected()","bool is_close_button_visible()","String get_title()"],"methods":[{"name":"clear_all_slots","fun":" void clear_all_slots()"},{"name":"clear_slot","fun":" void clear_slot(int idx)"},{"name":"get_connection_input_color","fun":" Color get_connection_input_color(int idx)"},{"name":"get_connection_input_count","fun":" int get_connection_input_count()"},{"name":"get_connection_input_position","fun":" Vector2 get_connection_input_position(int idx)"},{"name":"get_connection_input_type","fun":" int get_connection_input_type(int idx)"},{"name":"get_connection_output_color","fun":" Color get_connection_output_color(int idx)"},{"name":"get_connection_output_count","fun":" int get_connection_output_count()"},{"name":"get_connection_output_position","fun":" Vector2 get_connection_output_position(int idx)"},{"name":"get_connection_output_type","fun":" int get_connection_output_type(int idx)"},{"name":"get_slot_color_left","fun":"const Color get_slot_color_left(int idx)"},{"name":"get_slot_color_right","fun":"const Color get_slot_color_right(int idx)"},{"name":"get_slot_type_left","fun":"const int get_slot_type_left(int idx)"},{"name":"get_slot_type_right","fun":"const int get_slot_type_right(int idx)"},{"name":"is_slot_enabled_left","fun":"const bool is_slot_enabled_left(int idx)"},{"name":"is_slot_enabled_right","fun":"const bool is_slot_enabled_right(int idx)"},{"name":"set_slot","fun":" void set_slot(int idx,bool enable_left,int type_left,Color color_left,bool enable_right,int type_right,Color color_right,Texture custom_left=null,Texture custom_right=null)"},{"name":"set_slot_color_left","fun":" void set_slot_color_left(int idx,Color color_left)"},{"name":"set_slot_color_right","fun":" void set_slot_color_right(int idx,Color color_right)"},{"name":"set_slot_enabled_left","fun":" void set_slot_enabled_left(int idx,bool enable_left)"},{"name":"set_slot_enabled_right","fun":" void set_slot_enabled_right(int idx,bool enable_right)"},{"name":"set_slot_type_left","fun":" void set_slot_type_left(int idx,int type_left)"},{"name":"set_slot_type_right","fun":" void set_slot_type_right(int idx,int type_right)"}],"signals":[{"name":"close_request","fun":"close_request()"},{"name":"dragged","fun":"dragged(Vector2 from,Vector2 to)"},{"name":"offset_changed","fun":"offset_changed()"},{"name":"raise_request","fun":"raise_request()"},{"name":"resize_request","fun":"resize_request(Vector2 new_minsize)"},{"name":"slot_updated","fun":"slot_updated(int idx)"}]}