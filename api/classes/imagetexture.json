{"name":"ImageTexture","parent":"Texture","comment":"A [Texture] based on an [Image].","des":"","const":[],"enums":[{"name":"Storage","value":[{"key":"STORAGE_RAW = 0"},{"key":"STORAGE_COMPRESS_LOSSY = 1"},{"key":"STORAGE_COMPRESS_LOSSLESS = 2"}]}],"props":[{"name":"flags","prop":"int flags  = 7","setget":"true"},{"name":"lossy_quality","prop":"float lossy_quality  = 0.7","setget":"true"},{"name":"storage","prop":"int storage  = 0","setget":"true"}],"setters":["set_flags(int value)","set_lossy_storage_quality(float value)","set_storage(int value)"],"getters":["int get_flags()","float get_lossy_storage_quality()","int get_storage()"],"methods":[{"name":"create","fun":" void create(int width,int height,Image.Format format,int flags=7)"},{"name":"create_from_image","fun":" void create_from_image(Image image,int flags=7)"},{"name":"get_format","fun":"const int get_format()"},{"name":"load","fun":" int load(String path)"},{"name":"set_data","fun":" void set_data(Image image)"},{"name":"set_size_override","fun":" void set_size_override(Vector2 size)"}],"signals":[]}