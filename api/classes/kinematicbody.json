{"name":"KinematicBody","parent":"PhysicsBody","comment":"Kinematic body 3D node.","des":"","const":[],"enums":[],"props":[{"name":"axis_lock_motion_x","prop":"bool axis_lock_motion_x  = false","setget":"true"},{"name":"axis_lock_motion_y","prop":"bool axis_lock_motion_y  = false","setget":"true"},{"name":"axis_lock_motion_z","prop":"bool axis_lock_motion_z  = false","setget":"true"},{"name":"collision/safe_margin","prop":"float collision/safe_margin  = 0.001","setget":"true"},{"name":"motion/sync_to_physics","prop":"bool motion/sync_to_physics  = false","setget":"true"},{"name":"move_lock_x","prop":"bool move_lock_x  = false","setget":"true"},{"name":"move_lock_y","prop":"bool move_lock_y  = false","setget":"true"},{"name":"move_lock_z","prop":"bool move_lock_z  = false","setget":"true"}],"setters":["set_axis_lock(bool value)","set_axis_lock(bool value)","set_axis_lock(bool value)","set_safe_margin(float value)","set_sync_to_physics(bool value)","set_axis_lock(bool value)","set_axis_lock(bool value)","set_axis_lock(bool value)"],"getters":["bool get_axis_lock()","bool get_axis_lock()","bool get_axis_lock()","float get_safe_margin()","bool is_sync_to_physics_enabled()","bool get_axis_lock()","bool get_axis_lock()","bool get_axis_lock()"],"methods":[{"name":"get_axis_lock","fun":"const bool get_axis_lock(int axis)"},{"name":"get_floor_angle","fun":"const float get_floor_angle(Vector3 up_direction)"},{"name":"get_floor_normal","fun":"const Vector3 get_floor_normal()"},{"name":"get_floor_velocity","fun":"const Vector3 get_floor_velocity()"},{"name":"get_last_slide_collision","fun":" KinematicCollision get_last_slide_collision()"},{"name":"get_slide_collision","fun":" KinematicCollision get_slide_collision(int slide_idx)"},{"name":"get_slide_count","fun":"const int get_slide_count()"},{"name":"is_on_ceiling","fun":"const bool is_on_ceiling()"},{"name":"is_on_floor","fun":"const bool is_on_floor()"},{"name":"is_on_wall","fun":"const bool is_on_wall()"},{"name":"move_and_collide","fun":" KinematicCollision move_and_collide(Vector3 rel_vec,bool infinite_inertia=true,bool exclude_raycast_shapes=true,bool test_only=false)"},{"name":"move_and_slide","fun":" Vector3 move_and_slide(Vector3 linear_velocity,Vector3 up_direction=Vector3( 0, 0, 0 ),bool stop_on_slope=false,int max_slides=4,float floor_max_angle=0.785398,bool infinite_inertia=true)"},{"name":"move_and_slide_with_snap","fun":" Vector3 move_and_slide_with_snap(Vector3 linear_velocity,Vector3 snap,Vector3 up_direction=Vector3( 0, 0, 0 ),bool stop_on_slope=false,int max_slides=4,float floor_max_angle=0.785398,bool infinite_inertia=true)"},{"name":"set_axis_lock","fun":" void set_axis_lock(PhysicsServer.BodyAxis axis,bool lock)"},{"name":"test_move","fun":" bool test_move(Transform from,Vector3 rel_vec,bool infinite_inertia=true)"}],"signals":[]}