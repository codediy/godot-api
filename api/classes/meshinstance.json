{"name":"MeshInstance","parent":"GeometryInstance","comment":"Node that instances meshes into a scenario.","des":"","const":[],"enums":[],"props":[{"name":"mesh","prop":"Mesh mesh  ","setget":"true"},{"name":"skeleton","prop":"NodePath skeleton  = NodePath(&quot;..&quot;)","setget":"true"},{"name":"skin","prop":"Skin skin  ","setget":"true"},{"name":"software_skinning_transform_normals","prop":"bool software_skinning_transform_normals  = true","setget":"true"}],"setters":["set_mesh(Mesh value)","set_skeleton_path(NodePath value)","set_skin(Skin value)","set_software_skinning_transform_normals(bool value)"],"getters":["Mesh get_mesh()","NodePath get_skeleton_path()","Skin get_skin()","bool is_software_skinning_transform_normals_enabled()"],"methods":[{"name":"create_convex_collision","fun":" void create_convex_collision(bool clean=true,bool simplify=false)"},{"name":"create_debug_tangents","fun":" void create_debug_tangents()"},{"name":"create_multiple_convex_collisions","fun":" void create_multiple_convex_collisions()"},{"name":"create_trimesh_collision","fun":" void create_trimesh_collision()"},{"name":"get_active_material","fun":"const Material get_active_material(int surface)"},{"name":"get_surface_material","fun":"const Material get_surface_material(int surface)"},{"name":"get_surface_material_count","fun":"const int get_surface_material_count()"},{"name":"set_surface_material","fun":" void set_surface_material(int surface,Material material)"}],"signals":[]}