{"name":"Node","parent":"Object","comment":"Base class for all [i]scene[/i] objects.","des":"","const":[{"name":"NOTIFICATION_ENTER_TREE","value":"10"},{"name":"NOTIFICATION_EXIT_TREE","value":"11"},{"name":"NOTIFICATION_MOVED_IN_PARENT","value":"12"},{"name":"NOTIFICATION_READY","value":"13"},{"name":"NOTIFICATION_PAUSED","value":"14"},{"name":"NOTIFICATION_UNPAUSED","value":"15"},{"name":"NOTIFICATION_PHYSICS_PROCESS","value":"16"},{"name":"NOTIFICATION_PROCESS","value":"17"},{"name":"NOTIFICATION_PARENTED","value":"18"},{"name":"NOTIFICATION_UNPARENTED","value":"19"},{"name":"NOTIFICATION_INSTANCED","value":"20"},{"name":"NOTIFICATION_DRAG_BEGIN","value":"21"},{"name":"NOTIFICATION_DRAG_END","value":"22"},{"name":"NOTIFICATION_PATH_CHANGED","value":"23"},{"name":"NOTIFICATION_INTERNAL_PROCESS","value":"25"},{"name":"NOTIFICATION_INTERNAL_PHYSICS_PROCESS","value":"26"},{"name":"NOTIFICATION_POST_ENTER_TREE","value":"27"},{"name":"NOTIFICATION_WM_MOUSE_ENTER","value":"1002"},{"name":"NOTIFICATION_WM_MOUSE_EXIT","value":"1003"},{"name":"NOTIFICATION_WM_FOCUS_IN","value":"1004"},{"name":"NOTIFICATION_WM_FOCUS_OUT","value":"1005"},{"name":"NOTIFICATION_WM_QUIT_REQUEST","value":"1006"},{"name":"NOTIFICATION_WM_GO_BACK_REQUEST","value":"1007"},{"name":"NOTIFICATION_WM_UNFOCUS_REQUEST","value":"1008"},{"name":"NOTIFICATION_OS_MEMORY_WARNING","value":"1009"},{"name":"NOTIFICATION_TRANSLATION_CHANGED","value":"1010"},{"name":"NOTIFICATION_WM_ABOUT","value":"1011"},{"name":"NOTIFICATION_CRASH","value":"1012"},{"name":"NOTIFICATION_OS_IME_UPDATE","value":"1013"},{"name":"NOTIFICATION_APP_RESUMED","value":"1014"},{"name":"NOTIFICATION_APP_PAUSED","value":"1015"}],"enums":[{"name":"PauseMode","value":[{"key":"PAUSE_MODE_INHERIT = 0"},{"key":"PAUSE_MODE_STOP = 1"},{"key":"PAUSE_MODE_PROCESS = 2"}]},{"name":"DuplicateFlags","value":[{"key":"DUPLICATE_SIGNALS = 1"},{"key":"DUPLICATE_GROUPS = 2"},{"key":"DUPLICATE_SCRIPTS = 4"},{"key":"DUPLICATE_USE_INSTANCING = 8"}]}],"props":[{"name":"custom_multiplayer","prop":"MultiplayerAPI custom_multiplayer  ","setget":"true"},{"name":"filename","prop":"String filename  ","setget":"true"},{"name":"multiplayer","prop":"MultiplayerAPI multiplayer  ","setget":"true"},{"name":"name","prop":"String name  ","setget":"true"},{"name":"owner","prop":"Node owner  ","setget":"true"},{"name":"pause_mode","prop":"int pause_mode  = 0","setget":"true"},{"name":"process_priority","prop":"int process_priority  = 0","setget":"true"}],"setters":["set_custom_multiplayer(MultiplayerAPI value)","set_filename(String value)","set_name(String value)","set_owner(Node value)","set_pause_mode(int value)","set_process_priority(int value)"],"getters":["MultiplayerAPI get_custom_multiplayer()","String get_filename()","MultiplayerAPI get_multiplayer()","String get_name()","Node get_owner()","int get_pause_mode()","int get_process_priority()"],"methods":[{"name":"_enter_tree","fun":"virtual void _enter_tree()"},{"name":"_exit_tree","fun":"virtual void _exit_tree()"},{"name":"_get_configuration_warning","fun":"virtual String _get_configuration_warning()"},{"name":"_input","fun":"virtual void _input(InputEvent event)"},{"name":"_physics_process","fun":"virtual void _physics_process(float delta)"},{"name":"_process","fun":"virtual void _process(float delta)"},{"name":"_ready","fun":"virtual void _ready()"},{"name":"_unhandled_input","fun":"virtual void _unhandled_input(InputEvent event)"},{"name":"_unhandled_key_input","fun":"virtual void _unhandled_key_input(InputEventKey event)"},{"name":"add_child","fun":" void add_child(Node node,bool legible_unique_name=false)"},{"name":"add_child_below_node","fun":" void add_child_below_node(Node node,Node child_node,bool legible_unique_name=false)"},{"name":"add_to_group","fun":" void add_to_group(String group,bool persistent=false)"},{"name":"can_process","fun":"const bool can_process()"},{"name":"duplicate","fun":"const Node duplicate(int flags)"},{"name":"find_node","fun":"const Node find_node(String mask,bool recursive=true,bool owned=true)"},{"name":"find_parent","fun":"const Node find_parent(String mask)"},{"name":"get_child","fun":"const Node get_child(int idx)"},{"name":"get_child_count","fun":"const int get_child_count()"},{"name":"get_children","fun":"const Array get_children()"},{"name":"get_groups","fun":"const Array get_groups()"},{"name":"get_index","fun":"const int get_index()"},{"name":"get_network_master","fun":"const int get_network_master()"},{"name":"get_node","fun":"const Node get_node(NodePath path)"},{"name":"get_node_and_resource","fun":" Array get_node_and_resource(NodePath path)"},{"name":"get_node_or_null","fun":"const Node get_node_or_null(NodePath path)"},{"name":"get_parent","fun":"const Node get_parent()"},{"name":"get_path","fun":"const NodePath get_path()"},{"name":"get_path_to","fun":"const NodePath get_path_to(Node node)"},{"name":"get_physics_process_delta_time","fun":"const float get_physics_process_delta_time()"},{"name":"get_position_in_parent","fun":"const int get_position_in_parent()"},{"name":"get_process_delta_time","fun":"const float get_process_delta_time()"},{"name":"get_scene_instance_load_placeholder","fun":"const bool get_scene_instance_load_placeholder()"},{"name":"get_tree","fun":"const SceneTree get_tree()"},{"name":"get_viewport","fun":"const Viewport get_viewport()"},{"name":"has_node","fun":"const bool has_node(NodePath path)"},{"name":"has_node_and_resource","fun":"const bool has_node_and_resource(NodePath path)"},{"name":"is_a_parent_of","fun":"const bool is_a_parent_of(Node node)"},{"name":"is_displayed_folded","fun":"const bool is_displayed_folded()"},{"name":"is_greater_than","fun":"const bool is_greater_than(Node node)"},{"name":"is_in_group","fun":"const bool is_in_group(String group)"},{"name":"is_inside_tree","fun":"const bool is_inside_tree()"},{"name":"is_network_master","fun":"const bool is_network_master()"},{"name":"is_physics_processing","fun":"const bool is_physics_processing()"},{"name":"is_physics_processing_internal","fun":"const bool is_physics_processing_internal()"},{"name":"is_processing","fun":"const bool is_processing()"},{"name":"is_processing_input","fun":"const bool is_processing_input()"},{"name":"is_processing_internal","fun":"const bool is_processing_internal()"},{"name":"is_processing_unhandled_input","fun":"const bool is_processing_unhandled_input()"},{"name":"is_processing_unhandled_key_input","fun":"const bool is_processing_unhandled_key_input()"},{"name":"move_child","fun":" void move_child(Node child_node,int to_position)"},{"name":"print_stray_nodes","fun":" void print_stray_nodes()"},{"name":"print_tree","fun":" void print_tree()"},{"name":"print_tree_pretty","fun":" void print_tree_pretty()"},{"name":"propagate_call","fun":" void propagate_call(String method,Array args=[  ],bool parent_first=false)"},{"name":"propagate_notification","fun":" void propagate_notification(int what)"},{"name":"queue_free","fun":" void queue_free()"},{"name":"raise","fun":" void raise()"},{"name":"remove_and_skip","fun":" void remove_and_skip()"},{"name":"remove_child","fun":" void remove_child(Node node)"},{"name":"remove_from_group","fun":" void remove_from_group(String group)"},{"name":"replace_by","fun":" void replace_by(Node node,bool keep_data=false)"},{"name":"request_ready","fun":" void request_ready()"},{"name":"rpc","fun":"vararg Variant rpc(String method)"},{"name":"rpc_config","fun":" void rpc_config(String method,MultiplayerAPI.RPCMode mode)"},{"name":"rpc_id","fun":"vararg Variant rpc_id(int peer_id,String method)"},{"name":"rpc_unreliable","fun":"vararg Variant rpc_unreliable(String method)"},{"name":"rpc_unreliable_id","fun":"vararg Variant rpc_unreliable_id(int peer_id,String method)"},{"name":"rset","fun":" void rset(String property,Variant value)"},{"name":"rset_config","fun":" void rset_config(String property,MultiplayerAPI.RPCMode mode)"},{"name":"rset_id","fun":" void rset_id(int peer_id,String property,Variant value)"},{"name":"rset_unreliable","fun":" void rset_unreliable(String property,Variant value)"},{"name":"rset_unreliable_id","fun":" void rset_unreliable_id(int peer_id,String property,Variant value)"},{"name":"set_display_folded","fun":" void set_display_folded(bool fold)"},{"name":"set_network_master","fun":" void set_network_master(int id,bool recursive=true)"},{"name":"set_physics_process","fun":" void set_physics_process(bool enable)"},{"name":"set_physics_process_internal","fun":" void set_physics_process_internal(bool enable)"},{"name":"set_process","fun":" void set_process(bool enable)"},{"name":"set_process_input","fun":" void set_process_input(bool enable)"},{"name":"set_process_internal","fun":" void set_process_internal(bool enable)"},{"name":"set_process_unhandled_input","fun":" void set_process_unhandled_input(bool enable)"},{"name":"set_process_unhandled_key_input","fun":" void set_process_unhandled_key_input(bool enable)"},{"name":"set_scene_instance_load_placeholder","fun":" void set_scene_instance_load_placeholder(bool load_placeholder)"},{"name":"update_configuration_warning","fun":" void update_configuration_warning()"}],"signals":[{"name":"ready","fun":"ready()"},{"name":"renamed","fun":"renamed()"},{"name":"tree_entered","fun":"tree_entered()"},{"name":"tree_exited","fun":"tree_exited()"},{"name":"tree_exiting","fun":"tree_exiting()"}]}