{"name":"Physics2DServer","parent":"Object","comment":"Server interface for low-level 2D physics access.","des":"","const":[],"enums":[{"name":"SpaceParameter","value":[{"key":"SPACE_PARAM_CONTACT_RECYCLE_RADIUS = 0"},{"key":"SPACE_PARAM_CONTACT_MAX_SEPARATION = 1"},{"key":"SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION = 2"},{"key":"SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD = 3"},{"key":"SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD = 4"},{"key":"SPACE_PARAM_BODY_TIME_TO_SLEEP = 5"},{"key":"SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS = 6"}]},{"name":"ShapeType","value":[{"key":"SHAPE_LINE = 0"},{"key":"SHAPE_RAY = 1"},{"key":"SHAPE_SEGMENT = 2"},{"key":"SHAPE_CIRCLE = 3"},{"key":"SHAPE_RECTANGLE = 4"},{"key":"SHAPE_CAPSULE = 5"},{"key":"SHAPE_CONVEX_POLYGON = 6"},{"key":"SHAPE_CONCAVE_POLYGON = 7"},{"key":"SHAPE_CUSTOM = 8"}]},{"name":"AreaParameter","value":[{"key":"AREA_PARAM_GRAVITY = 0"},{"key":"AREA_PARAM_GRAVITY_VECTOR = 1"},{"key":"AREA_PARAM_GRAVITY_IS_POINT = 2"},{"key":"AREA_PARAM_GRAVITY_DISTANCE_SCALE = 3"},{"key":"AREA_PARAM_GRAVITY_POINT_ATTENUATION = 4"},{"key":"AREA_PARAM_LINEAR_DAMP = 5"},{"key":"AREA_PARAM_ANGULAR_DAMP = 6"},{"key":"AREA_PARAM_PRIORITY = 7"}]},{"name":"AreaSpaceOverrideMode","value":[{"key":"AREA_SPACE_OVERRIDE_DISABLED = 0"},{"key":"AREA_SPACE_OVERRIDE_COMBINE = 1"},{"key":"AREA_SPACE_OVERRIDE_COMBINE_REPLACE = 2"},{"key":"AREA_SPACE_OVERRIDE_REPLACE = 3"},{"key":"AREA_SPACE_OVERRIDE_REPLACE_COMBINE = 4"}]},{"name":"BodyMode","value":[{"key":"BODY_MODE_STATIC = 0"},{"key":"BODY_MODE_KINEMATIC = 1"},{"key":"BODY_MODE_RIGID = 2"},{"key":"BODY_MODE_CHARACTER = 3"}]},{"name":"BodyParameter","value":[{"key":"BODY_PARAM_BOUNCE = 0"},{"key":"BODY_PARAM_FRICTION = 1"},{"key":"BODY_PARAM_MASS = 2"},{"key":"BODY_PARAM_INERTIA = 3"},{"key":"BODY_PARAM_GRAVITY_SCALE = 4"},{"key":"BODY_PARAM_LINEAR_DAMP = 5"},{"key":"BODY_PARAM_ANGULAR_DAMP = 6"},{"key":"BODY_PARAM_MAX = 7"}]},{"name":"BodyState","value":[{"key":"BODY_STATE_TRANSFORM = 0"},{"key":"BODY_STATE_LINEAR_VELOCITY = 1"},{"key":"BODY_STATE_ANGULAR_VELOCITY = 2"},{"key":"BODY_STATE_SLEEPING = 3"},{"key":"BODY_STATE_CAN_SLEEP = 4"}]},{"name":"JointType","value":[{"key":"JOINT_PIN = 0"},{"key":"JOINT_GROOVE = 1"},{"key":"JOINT_DAMPED_SPRING = 2"}]},{"name":"JointParam","value":[{"key":"JOINT_PARAM_BIAS = 0"},{"key":"JOINT_PARAM_MAX_BIAS = 1"},{"key":"JOINT_PARAM_MAX_FORCE = 2"}]},{"name":"DampedStringParam","value":[{"key":"DAMPED_STRING_REST_LENGTH = 0"},{"key":"DAMPED_STRING_STIFFNESS = 1"},{"key":"DAMPED_STRING_DAMPING = 2"}]},{"name":"CCDMode","value":[{"key":"CCD_MODE_DISABLED = 0"},{"key":"CCD_MODE_CAST_RAY = 1"},{"key":"CCD_MODE_CAST_SHAPE = 2"}]},{"name":"AreaBodyStatus","value":[{"key":"AREA_BODY_ADDED = 0"},{"key":"AREA_BODY_REMOVED = 1"}]},{"name":"ProcessInfo","value":[{"key":"INFO_ACTIVE_OBJECTS = 0"},{"key":"INFO_COLLISION_PAIRS = 1"},{"key":"INFO_ISLAND_COUNT = 2"}]}],"props":[],"setters":[],"getters":[],"methods":[{"name":"area_add_shape","fun":" void area_add_shape(RID area,RID shape,Transform2D transform=Transform2D( 1, 0, 0, 1, 0, 0 ),bool disabled=false)"},{"name":"area_attach_canvas_instance_id","fun":" void area_attach_canvas_instance_id(RID area,int id)"},{"name":"area_attach_object_instance_id","fun":" void area_attach_object_instance_id(RID area,int id)"},{"name":"area_clear_shapes","fun":" void area_clear_shapes(RID area)"},{"name":"area_create","fun":" RID area_create()"},{"name":"area_get_canvas_instance_id","fun":"const int area_get_canvas_instance_id(RID area)"},{"name":"area_get_object_instance_id","fun":"const int area_get_object_instance_id(RID area)"},{"name":"area_get_param","fun":"const Variant area_get_param(RID area,Physics2DServer.AreaParameter param)"},{"name":"area_get_shape","fun":"const RID area_get_shape(RID area,int shape_idx)"},{"name":"area_get_shape_count","fun":"const int area_get_shape_count(RID area)"},{"name":"area_get_shape_transform","fun":"const Transform2D area_get_shape_transform(RID area,int shape_idx)"},{"name":"area_get_space","fun":"const RID area_get_space(RID area)"},{"name":"area_get_space_override_mode","fun":"const int area_get_space_override_mode(RID area)"},{"name":"area_get_transform","fun":"const Transform2D area_get_transform(RID area)"},{"name":"area_remove_shape","fun":" void area_remove_shape(RID area,int shape_idx)"},{"name":"area_set_area_monitor_callback","fun":" void area_set_area_monitor_callback(RID area,Object receiver,String method)"},{"name":"area_set_collision_layer","fun":" void area_set_collision_layer(RID area,int layer)"},{"name":"area_set_collision_mask","fun":" void area_set_collision_mask(RID area,int mask)"},{"name":"area_set_monitor_callback","fun":" void area_set_monitor_callback(RID area,Object receiver,String method)"},{"name":"area_set_monitorable","fun":" void area_set_monitorable(RID area,bool monitorable)"},{"name":"area_set_param","fun":" void area_set_param(RID area,Physics2DServer.AreaParameter param,Variant value)"},{"name":"area_set_shape","fun":" void area_set_shape(RID area,int shape_idx,RID shape)"},{"name":"area_set_shape_disabled","fun":" void area_set_shape_disabled(RID area,int shape_idx,bool disabled)"},{"name":"area_set_shape_transform","fun":" void area_set_shape_transform(RID area,int shape_idx,Transform2D transform)"},{"name":"area_set_space","fun":" void area_set_space(RID area,RID space)"},{"name":"area_set_space_override_mode","fun":" void area_set_space_override_mode(RID area,Physics2DServer.AreaSpaceOverrideMode mode)"},{"name":"area_set_transform","fun":" void area_set_transform(RID area,Transform2D transform)"},{"name":"body_add_central_force","fun":" void body_add_central_force(RID body,Vector2 force)"},{"name":"body_add_collision_exception","fun":" void body_add_collision_exception(RID body,RID excepted_body)"},{"name":"body_add_force","fun":" void body_add_force(RID body,Vector2 offset,Vector2 force)"},{"name":"body_add_shape","fun":" void body_add_shape(RID body,RID shape,Transform2D transform=Transform2D( 1, 0, 0, 1, 0, 0 ),bool disabled=false)"},{"name":"body_add_torque","fun":" void body_add_torque(RID body,float torque)"},{"name":"body_apply_central_impulse","fun":" void body_apply_central_impulse(RID body,Vector2 impulse)"},{"name":"body_apply_impulse","fun":" void body_apply_impulse(RID body,Vector2 position,Vector2 impulse)"},{"name":"body_apply_torque_impulse","fun":" void body_apply_torque_impulse(RID body,float impulse)"},{"name":"body_attach_canvas_instance_id","fun":" void body_attach_canvas_instance_id(RID body,int id)"},{"name":"body_attach_object_instance_id","fun":" void body_attach_object_instance_id(RID body,int id)"},{"name":"body_clear_shapes","fun":" void body_clear_shapes(RID body)"},{"name":"body_create","fun":" RID body_create()"},{"name":"body_get_canvas_instance_id","fun":"const int body_get_canvas_instance_id(RID body)"},{"name":"body_get_collision_layer","fun":"const int body_get_collision_layer(RID body)"},{"name":"body_get_collision_mask","fun":"const int body_get_collision_mask(RID body)"},{"name":"body_get_continuous_collision_detection_mode","fun":"const int body_get_continuous_collision_detection_mode(RID body)"},{"name":"body_get_direct_state","fun":" Physics2DDirectBodyState body_get_direct_state(RID body)"},{"name":"body_get_max_contacts_reported","fun":"const int body_get_max_contacts_reported(RID body)"},{"name":"body_get_mode","fun":"const int body_get_mode(RID body)"},{"name":"body_get_object_instance_id","fun":"const int body_get_object_instance_id(RID body)"},{"name":"body_get_param","fun":"const float body_get_param(RID body,Physics2DServer.BodyParameter param)"},{"name":"body_get_shape","fun":"const RID body_get_shape(RID body,int shape_idx)"},{"name":"body_get_shape_count","fun":"const int body_get_shape_count(RID body)"},{"name":"body_get_shape_metadata","fun":"const Variant body_get_shape_metadata(RID body,int shape_idx)"},{"name":"body_get_shape_transform","fun":"const Transform2D body_get_shape_transform(RID body,int shape_idx)"},{"name":"body_get_space","fun":"const RID body_get_space(RID body)"},{"name":"body_get_state","fun":"const Variant body_get_state(RID body,Physics2DServer.BodyState state)"},{"name":"body_is_omitting_force_integration","fun":"const bool body_is_omitting_force_integration(RID body)"},{"name":"body_remove_collision_exception","fun":" void body_remove_collision_exception(RID body,RID excepted_body)"},{"name":"body_remove_shape","fun":" void body_remove_shape(RID body,int shape_idx)"},{"name":"body_set_axis_velocity","fun":" void body_set_axis_velocity(RID body,Vector2 axis_velocity)"},{"name":"body_set_collision_layer","fun":" void body_set_collision_layer(RID body,int layer)"},{"name":"body_set_collision_mask","fun":" void body_set_collision_mask(RID body,int mask)"},{"name":"body_set_continuous_collision_detection_mode","fun":" void body_set_continuous_collision_detection_mode(RID body,Physics2DServer.CCDMode mode)"},{"name":"body_set_force_integration_callback","fun":" void body_set_force_integration_callback(RID body,Object receiver,String method,Variant userdata=null)"},{"name":"body_set_max_contacts_reported","fun":" void body_set_max_contacts_reported(RID body,int amount)"},{"name":"body_set_mode","fun":" void body_set_mode(RID body,Physics2DServer.BodyMode mode)"},{"name":"body_set_omit_force_integration","fun":" void body_set_omit_force_integration(RID body,bool enable)"},{"name":"body_set_param","fun":" void body_set_param(RID body,Physics2DServer.BodyParameter param,float value)"},{"name":"body_set_shape","fun":" void body_set_shape(RID body,int shape_idx,RID shape)"},{"name":"body_set_shape_as_one_way_collision","fun":" void body_set_shape_as_one_way_collision(RID body,int shape_idx,bool enable,float margin)"},{"name":"body_set_shape_disabled","fun":" void body_set_shape_disabled(RID body,int shape_idx,bool disabled)"},{"name":"body_set_shape_metadata","fun":" void body_set_shape_metadata(RID body,int shape_idx,Variant metadata)"},{"name":"body_set_shape_transform","fun":" void body_set_shape_transform(RID body,int shape_idx,Transform2D transform)"},{"name":"body_set_space","fun":" void body_set_space(RID body,RID space)"},{"name":"body_set_state","fun":" void body_set_state(RID body,Physics2DServer.BodyState state,Variant value)"},{"name":"body_test_motion","fun":" bool body_test_motion(RID body,Transform2D from,Vector2 motion,bool infinite_inertia,float margin=0.08,Physics2DTestMotionResult result=null,bool exclude_raycast_shapes=true,Array exclude=[  ])"},{"name":"capsule_shape_create","fun":" RID capsule_shape_create()"},{"name":"circle_shape_create","fun":" RID circle_shape_create()"},{"name":"concave_polygon_shape_create","fun":" RID concave_polygon_shape_create()"},{"name":"convex_polygon_shape_create","fun":" RID convex_polygon_shape_create()"},{"name":"damped_spring_joint_create","fun":" RID damped_spring_joint_create(Vector2 anchor_a,Vector2 anchor_b,RID body_a,RID body_b)"},{"name":"damped_string_joint_get_param","fun":"const float damped_string_joint_get_param(RID joint,Physics2DServer.DampedStringParam param)"},{"name":"damped_string_joint_set_param","fun":" void damped_string_joint_set_param(RID joint,Physics2DServer.DampedStringParam param,float value)"},{"name":"free_rid","fun":" void free_rid(RID rid)"},{"name":"get_process_info","fun":" int get_process_info(int process_info)"},{"name":"groove_joint_create","fun":" RID groove_joint_create(Vector2 groove1_a,Vector2 groove2_a,Vector2 anchor_b,RID body_a,RID body_b)"},{"name":"joint_get_param","fun":"const float joint_get_param(RID joint,Physics2DServer.JointParam param)"},{"name":"joint_get_type","fun":"const int joint_get_type(RID joint)"},{"name":"joint_set_param","fun":" void joint_set_param(RID joint,Physics2DServer.JointParam param,float value)"},{"name":"line_shape_create","fun":" RID line_shape_create()"},{"name":"pin_joint_create","fun":" RID pin_joint_create(Vector2 anchor,RID body_a,RID body_b)"},{"name":"ray_shape_create","fun":" RID ray_shape_create()"},{"name":"rectangle_shape_create","fun":" RID rectangle_shape_create()"},{"name":"segment_shape_create","fun":" RID segment_shape_create()"},{"name":"set_active","fun":" void set_active(bool active)"},{"name":"set_collision_iterations","fun":" void set_collision_iterations(int iterations)"},{"name":"shape_get_data","fun":"const Variant shape_get_data(RID shape)"},{"name":"shape_get_type","fun":"const int shape_get_type(RID shape)"},{"name":"shape_set_data","fun":" void shape_set_data(RID shape,Variant data)"},{"name":"space_create","fun":" RID space_create()"},{"name":"space_get_direct_state","fun":" Physics2DDirectSpaceState space_get_direct_state(RID space)"},{"name":"space_get_param","fun":"const float space_get_param(RID space,Physics2DServer.SpaceParameter param)"},{"name":"space_is_active","fun":"const bool space_is_active(RID space)"},{"name":"space_set_active","fun":" void space_set_active(RID space,bool active)"},{"name":"space_set_param","fun":" void space_set_param(RID space,Physics2DServer.SpaceParameter param,float value)"}],"signals":[]}