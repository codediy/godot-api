{"name":"PhysicsServer","parent":"Object","comment":"Server interface for low-level physics access.","des":"","const":[],"enums":[{"name":"JointType","value":[{"key":"JOINT_PIN = 0"},{"key":"JOINT_HINGE = 1"},{"key":"JOINT_SLIDER = 2"},{"key":"JOINT_CONE_TWIST = 3"},{"key":"JOINT_6DOF = 4"}]},{"name":"PinJointParam","value":[{"key":"PIN_JOINT_BIAS = 0"},{"key":"PIN_JOINT_DAMPING = 1"},{"key":"PIN_JOINT_IMPULSE_CLAMP = 2"}]},{"name":"HingeJointParam","value":[{"key":"HINGE_JOINT_BIAS = 0"},{"key":"HINGE_JOINT_LIMIT_UPPER = 1"},{"key":"HINGE_JOINT_LIMIT_LOWER = 2"},{"key":"HINGE_JOINT_LIMIT_BIAS = 3"},{"key":"HINGE_JOINT_LIMIT_SOFTNESS = 4"},{"key":"HINGE_JOINT_LIMIT_RELAXATION = 5"},{"key":"HINGE_JOINT_MOTOR_TARGET_VELOCITY = 6"},{"key":"HINGE_JOINT_MOTOR_MAX_IMPULSE = 7"}]},{"name":"HingeJointFlag","value":[{"key":"HINGE_JOINT_FLAG_USE_LIMIT = 0"},{"key":"HINGE_JOINT_FLAG_ENABLE_MOTOR = 1"}]},{"name":"SliderJointParam","value":[{"key":"SLIDER_JOINT_LINEAR_LIMIT_UPPER = 0"},{"key":"SLIDER_JOINT_LINEAR_LIMIT_LOWER = 1"},{"key":"SLIDER_JOINT_LINEAR_LIMIT_SOFTNESS = 2"},{"key":"SLIDER_JOINT_LINEAR_LIMIT_RESTITUTION = 3"},{"key":"SLIDER_JOINT_LINEAR_LIMIT_DAMPING = 4"},{"key":"SLIDER_JOINT_LINEAR_MOTION_SOFTNESS = 5"},{"key":"SLIDER_JOINT_LINEAR_MOTION_RESTITUTION = 6"},{"key":"SLIDER_JOINT_LINEAR_MOTION_DAMPING = 7"},{"key":"SLIDER_JOINT_LINEAR_ORTHOGONAL_SOFTNESS = 8"},{"key":"SLIDER_JOINT_LINEAR_ORTHOGONAL_RESTITUTION = 9"},{"key":"SLIDER_JOINT_LINEAR_ORTHOGONAL_DAMPING = 10"},{"key":"SLIDER_JOINT_ANGULAR_LIMIT_UPPER = 11"},{"key":"SLIDER_JOINT_ANGULAR_LIMIT_LOWER = 12"},{"key":"SLIDER_JOINT_ANGULAR_LIMIT_SOFTNESS = 13"},{"key":"SLIDER_JOINT_ANGULAR_LIMIT_RESTITUTION = 14"},{"key":"SLIDER_JOINT_ANGULAR_LIMIT_DAMPING = 15"},{"key":"SLIDER_JOINT_ANGULAR_MOTION_SOFTNESS = 16"},{"key":"SLIDER_JOINT_ANGULAR_MOTION_RESTITUTION = 17"},{"key":"SLIDER_JOINT_ANGULAR_MOTION_DAMPING = 18"},{"key":"SLIDER_JOINT_ANGULAR_ORTHOGONAL_SOFTNESS = 19"},{"key":"SLIDER_JOINT_ANGULAR_ORTHOGONAL_RESTITUTION = 20"},{"key":"SLIDER_JOINT_ANGULAR_ORTHOGONAL_DAMPING = 21"},{"key":"SLIDER_JOINT_MAX = 22"}]},{"name":"ConeTwistJointParam","value":[{"key":"CONE_TWIST_JOINT_SWING_SPAN = 0"},{"key":"CONE_TWIST_JOINT_TWIST_SPAN = 1"},{"key":"CONE_TWIST_JOINT_BIAS = 2"},{"key":"CONE_TWIST_JOINT_SOFTNESS = 3"},{"key":"CONE_TWIST_JOINT_RELAXATION = 4"}]},{"name":"G6DOFJointAxisParam","value":[{"key":"G6DOF_JOINT_LINEAR_LOWER_LIMIT = 0"},{"key":"G6DOF_JOINT_LINEAR_UPPER_LIMIT = 1"},{"key":"G6DOF_JOINT_LINEAR_LIMIT_SOFTNESS = 2"},{"key":"G6DOF_JOINT_LINEAR_RESTITUTION = 3"},{"key":"G6DOF_JOINT_LINEAR_DAMPING = 4"},{"key":"G6DOF_JOINT_LINEAR_MOTOR_TARGET_VELOCITY = 5"},{"key":"G6DOF_JOINT_LINEAR_MOTOR_FORCE_LIMIT = 6"},{"key":"G6DOF_JOINT_ANGULAR_LOWER_LIMIT = 10"},{"key":"G6DOF_JOINT_ANGULAR_UPPER_LIMIT = 11"},{"key":"G6DOF_JOINT_ANGULAR_LIMIT_SOFTNESS = 12"},{"key":"G6DOF_JOINT_ANGULAR_DAMPING = 13"},{"key":"G6DOF_JOINT_ANGULAR_RESTITUTION = 14"},{"key":"G6DOF_JOINT_ANGULAR_FORCE_LIMIT = 15"},{"key":"G6DOF_JOINT_ANGULAR_ERP = 16"},{"key":"G6DOF_JOINT_ANGULAR_MOTOR_TARGET_VELOCITY = 17"},{"key":"G6DOF_JOINT_ANGULAR_MOTOR_FORCE_LIMIT = 18"}]},{"name":"G6DOFJointAxisFlag","value":[{"key":"G6DOF_JOINT_FLAG_ENABLE_LINEAR_LIMIT = 0"},{"key":"G6DOF_JOINT_FLAG_ENABLE_ANGULAR_LIMIT = 1"},{"key":"G6DOF_JOINT_FLAG_ENABLE_MOTOR = 4"},{"key":"G6DOF_JOINT_FLAG_ENABLE_LINEAR_MOTOR = 5"}]},{"name":"ShapeType","value":[{"key":"SHAPE_PLANE = 0"},{"key":"SHAPE_RAY = 1"},{"key":"SHAPE_SPHERE = 2"},{"key":"SHAPE_BOX = 3"},{"key":"SHAPE_CAPSULE = 4"},{"key":"SHAPE_CYLINDER = 5"},{"key":"SHAPE_CONVEX_POLYGON = 6"},{"key":"SHAPE_CONCAVE_POLYGON = 7"},{"key":"SHAPE_HEIGHTMAP = 8"},{"key":"SHAPE_CUSTOM = 9"}]},{"name":"AreaParameter","value":[{"key":"AREA_PARAM_GRAVITY = 0"},{"key":"AREA_PARAM_GRAVITY_VECTOR = 1"},{"key":"AREA_PARAM_GRAVITY_IS_POINT = 2"},{"key":"AREA_PARAM_GRAVITY_DISTANCE_SCALE = 3"},{"key":"AREA_PARAM_GRAVITY_POINT_ATTENUATION = 4"},{"key":"AREA_PARAM_LINEAR_DAMP = 5"},{"key":"AREA_PARAM_ANGULAR_DAMP = 6"},{"key":"AREA_PARAM_PRIORITY = 7"}]},{"name":"AreaSpaceOverrideMode","value":[{"key":"AREA_SPACE_OVERRIDE_DISABLED = 0"},{"key":"AREA_SPACE_OVERRIDE_COMBINE = 1"},{"key":"AREA_SPACE_OVERRIDE_COMBINE_REPLACE = 2"},{"key":"AREA_SPACE_OVERRIDE_REPLACE = 3"},{"key":"AREA_SPACE_OVERRIDE_REPLACE_COMBINE = 4"}]},{"name":"BodyMode","value":[{"key":"BODY_MODE_STATIC = 0"},{"key":"BODY_MODE_KINEMATIC = 1"},{"key":"BODY_MODE_RIGID = 2"},{"key":"BODY_MODE_CHARACTER = 3"}]},{"name":"BodyParameter","value":[{"key":"BODY_PARAM_BOUNCE = 0"},{"key":"BODY_PARAM_FRICTION = 1"},{"key":"BODY_PARAM_MASS = 2"},{"key":"BODY_PARAM_GRAVITY_SCALE = 3"},{"key":"BODY_PARAM_LINEAR_DAMP = 4"},{"key":"BODY_PARAM_ANGULAR_DAMP = 5"},{"key":"BODY_PARAM_MAX = 6"}]},{"name":"BodyState","value":[{"key":"BODY_STATE_TRANSFORM = 0"},{"key":"BODY_STATE_LINEAR_VELOCITY = 1"},{"key":"BODY_STATE_ANGULAR_VELOCITY = 2"},{"key":"BODY_STATE_SLEEPING = 3"},{"key":"BODY_STATE_CAN_SLEEP = 4"}]},{"name":"AreaBodyStatus","value":[{"key":"AREA_BODY_ADDED = 0"},{"key":"AREA_BODY_REMOVED = 1"}]},{"name":"ProcessInfo","value":[{"key":"INFO_ACTIVE_OBJECTS = 0"},{"key":"INFO_COLLISION_PAIRS = 1"},{"key":"INFO_ISLAND_COUNT = 2"}]},{"name":"SpaceParameter","value":[{"key":"SPACE_PARAM_CONTACT_RECYCLE_RADIUS = 0"},{"key":"SPACE_PARAM_CONTACT_MAX_SEPARATION = 1"},{"key":"SPACE_PARAM_BODY_MAX_ALLOWED_PENETRATION = 2"},{"key":"SPACE_PARAM_BODY_LINEAR_VELOCITY_SLEEP_THRESHOLD = 3"},{"key":"SPACE_PARAM_BODY_ANGULAR_VELOCITY_SLEEP_THRESHOLD = 4"},{"key":"SPACE_PARAM_BODY_TIME_TO_SLEEP = 5"},{"key":"SPACE_PARAM_BODY_ANGULAR_VELOCITY_DAMP_RATIO = 6"},{"key":"SPACE_PARAM_CONSTRAINT_DEFAULT_BIAS = 7"}]},{"name":"BodyAxis","value":[{"key":"BODY_AXIS_LINEAR_X = 1"},{"key":"BODY_AXIS_LINEAR_Y = 2"},{"key":"BODY_AXIS_LINEAR_Z = 4"},{"key":"BODY_AXIS_ANGULAR_X = 8"},{"key":"BODY_AXIS_ANGULAR_Y = 16"},{"key":"BODY_AXIS_ANGULAR_Z = 32"}]}],"props":[],"setters":[],"getters":[],"methods":[{"name":"area_add_shape","fun":" void area_add_shape(RID area,RID shape,Transform transform=Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 ),bool disabled=false)"},{"name":"area_attach_object_instance_id","fun":" void area_attach_object_instance_id(RID area,int id)"},{"name":"area_clear_shapes","fun":" void area_clear_shapes(RID area)"},{"name":"area_create","fun":" RID area_create()"},{"name":"area_get_object_instance_id","fun":"const int area_get_object_instance_id(RID area)"},{"name":"area_get_param","fun":"const Variant area_get_param(RID area,PhysicsServer.AreaParameter param)"},{"name":"area_get_shape","fun":"const RID area_get_shape(RID area,int shape_idx)"},{"name":"area_get_shape_count","fun":"const int area_get_shape_count(RID area)"},{"name":"area_get_shape_transform","fun":"const Transform area_get_shape_transform(RID area,int shape_idx)"},{"name":"area_get_space","fun":"const RID area_get_space(RID area)"},{"name":"area_get_space_override_mode","fun":"const int area_get_space_override_mode(RID area)"},{"name":"area_get_transform","fun":"const Transform area_get_transform(RID area)"},{"name":"area_is_ray_pickable","fun":"const bool area_is_ray_pickable(RID area)"},{"name":"area_remove_shape","fun":" void area_remove_shape(RID area,int shape_idx)"},{"name":"area_set_area_monitor_callback","fun":" void area_set_area_monitor_callback(RID area,Object receiver,String method)"},{"name":"area_set_collision_layer","fun":" void area_set_collision_layer(RID area,int layer)"},{"name":"area_set_collision_mask","fun":" void area_set_collision_mask(RID area,int mask)"},{"name":"area_set_monitor_callback","fun":" void area_set_monitor_callback(RID area,Object receiver,String method)"},{"name":"area_set_monitorable","fun":" void area_set_monitorable(RID area,bool monitorable)"},{"name":"area_set_param","fun":" void area_set_param(RID area,PhysicsServer.AreaParameter param,Variant value)"},{"name":"area_set_ray_pickable","fun":" void area_set_ray_pickable(RID area,bool enable)"},{"name":"area_set_shape","fun":" void area_set_shape(RID area,int shape_idx,RID shape)"},{"name":"area_set_shape_disabled","fun":" void area_set_shape_disabled(RID area,int shape_idx,bool disabled)"},{"name":"area_set_shape_transform","fun":" void area_set_shape_transform(RID area,int shape_idx,Transform transform)"},{"name":"area_set_space","fun":" void area_set_space(RID area,RID space)"},{"name":"area_set_space_override_mode","fun":" void area_set_space_override_mode(RID area,PhysicsServer.AreaSpaceOverrideMode mode)"},{"name":"area_set_transform","fun":" void area_set_transform(RID area,Transform transform)"},{"name":"body_add_central_force","fun":" void body_add_central_force(RID body,Vector3 force)"},{"name":"body_add_collision_exception","fun":" void body_add_collision_exception(RID body,RID excepted_body)"},{"name":"body_add_force","fun":" void body_add_force(RID body,Vector3 force,Vector3 position)"},{"name":"body_add_shape","fun":" void body_add_shape(RID body,RID shape,Transform transform=Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0 ),bool disabled=false)"},{"name":"body_add_torque","fun":" void body_add_torque(RID body,Vector3 torque)"},{"name":"body_apply_central_impulse","fun":" void body_apply_central_impulse(RID body,Vector3 impulse)"},{"name":"body_apply_impulse","fun":" void body_apply_impulse(RID body,Vector3 position,Vector3 impulse)"},{"name":"body_apply_torque_impulse","fun":" void body_apply_torque_impulse(RID body,Vector3 impulse)"},{"name":"body_attach_object_instance_id","fun":" void body_attach_object_instance_id(RID body,int id)"},{"name":"body_clear_shapes","fun":" void body_clear_shapes(RID body)"},{"name":"body_create","fun":" RID body_create(PhysicsServer.BodyMode mode=2,bool init_sleeping=false)"},{"name":"body_get_collision_layer","fun":"const int body_get_collision_layer(RID body)"},{"name":"body_get_collision_mask","fun":"const int body_get_collision_mask(RID body)"},{"name":"body_get_direct_state","fun":" PhysicsDirectBodyState body_get_direct_state(RID body)"},{"name":"body_get_kinematic_safe_margin","fun":"const float body_get_kinematic_safe_margin(RID body)"},{"name":"body_get_max_contacts_reported","fun":"const int body_get_max_contacts_reported(RID body)"},{"name":"body_get_mode","fun":"const int body_get_mode(RID body)"},{"name":"body_get_object_instance_id","fun":"const int body_get_object_instance_id(RID body)"},{"name":"body_get_param","fun":"const float body_get_param(RID body,PhysicsServer.BodyParameter param)"},{"name":"body_get_shape","fun":"const RID body_get_shape(RID body,int shape_idx)"},{"name":"body_get_shape_count","fun":"const int body_get_shape_count(RID body)"},{"name":"body_get_shape_transform","fun":"const Transform body_get_shape_transform(RID body,int shape_idx)"},{"name":"body_get_space","fun":"const RID body_get_space(RID body)"},{"name":"body_get_state","fun":"const Variant body_get_state(RID body,PhysicsServer.BodyState state)"},{"name":"body_is_axis_locked","fun":"const bool body_is_axis_locked(RID body,PhysicsServer.BodyAxis axis)"},{"name":"body_is_continuous_collision_detection_enabled","fun":"const bool body_is_continuous_collision_detection_enabled(RID body)"},{"name":"body_is_omitting_force_integration","fun":"const bool body_is_omitting_force_integration(RID body)"},{"name":"body_is_ray_pickable","fun":"const bool body_is_ray_pickable(RID body)"},{"name":"body_remove_collision_exception","fun":" void body_remove_collision_exception(RID body,RID excepted_body)"},{"name":"body_remove_shape","fun":" void body_remove_shape(RID body,int shape_idx)"},{"name":"body_set_axis_lock","fun":" void body_set_axis_lock(RID body,PhysicsServer.BodyAxis axis,bool lock)"},{"name":"body_set_axis_velocity","fun":" void body_set_axis_velocity(RID body,Vector3 axis_velocity)"},{"name":"body_set_collision_layer","fun":" void body_set_collision_layer(RID body,int layer)"},{"name":"body_set_collision_mask","fun":" void body_set_collision_mask(RID body,int mask)"},{"name":"body_set_enable_continuous_collision_detection","fun":" void body_set_enable_continuous_collision_detection(RID body,bool enable)"},{"name":"body_set_force_integration_callback","fun":" void body_set_force_integration_callback(RID body,Object receiver,String method,Variant userdata=null)"},{"name":"body_set_kinematic_safe_margin","fun":" void body_set_kinematic_safe_margin(RID body,float margin)"},{"name":"body_set_max_contacts_reported","fun":" void body_set_max_contacts_reported(RID body,int amount)"},{"name":"body_set_mode","fun":" void body_set_mode(RID body,PhysicsServer.BodyMode mode)"},{"name":"body_set_omit_force_integration","fun":" void body_set_omit_force_integration(RID body,bool enable)"},{"name":"body_set_param","fun":" void body_set_param(RID body,PhysicsServer.BodyParameter param,float value)"},{"name":"body_set_ray_pickable","fun":" void body_set_ray_pickable(RID body,bool enable)"},{"name":"body_set_shape","fun":" void body_set_shape(RID body,int shape_idx,RID shape)"},{"name":"body_set_shape_disabled","fun":" void body_set_shape_disabled(RID body,int shape_idx,bool disabled)"},{"name":"body_set_shape_transform","fun":" void body_set_shape_transform(RID body,int shape_idx,Transform transform)"},{"name":"body_set_space","fun":" void body_set_space(RID body,RID space)"},{"name":"body_set_state","fun":" void body_set_state(RID body,PhysicsServer.BodyState state,Variant value)"},{"name":"body_test_motion","fun":" bool body_test_motion(RID body,Transform from,Vector3 motion,bool infinite_inertia,PhysicsTestMotionResult result=null,bool exclude_raycast_shapes=true,Array exclude=[  ])"},{"name":"cone_twist_joint_get_param","fun":"const float cone_twist_joint_get_param(RID joint,PhysicsServer.ConeTwistJointParam param)"},{"name":"cone_twist_joint_set_param","fun":" void cone_twist_joint_set_param(RID joint,PhysicsServer.ConeTwistJointParam param,float value)"},{"name":"free_rid","fun":" void free_rid(RID rid)"},{"name":"generic_6dof_joint_get_flag","fun":" bool generic_6dof_joint_get_flag(RID joint,Vector3.Axis axis,PhysicsServer.G6DOFJointAxisFlag flag)"},{"name":"generic_6dof_joint_get_param","fun":" float generic_6dof_joint_get_param(RID joint,Vector3.Axis axis,PhysicsServer.G6DOFJointAxisParam param)"},{"name":"generic_6dof_joint_set_flag","fun":" void generic_6dof_joint_set_flag(RID joint,Vector3.Axis axis,PhysicsServer.G6DOFJointAxisFlag flag,bool enable)"},{"name":"generic_6dof_joint_set_param","fun":" void generic_6dof_joint_set_param(RID joint,Vector3.Axis axis,PhysicsServer.G6DOFJointAxisParam param,float value)"},{"name":"get_process_info","fun":" int get_process_info(int process_info)"},{"name":"hinge_joint_get_flag","fun":"const bool hinge_joint_get_flag(RID joint,PhysicsServer.HingeJointFlag flag)"},{"name":"hinge_joint_get_param","fun":"const float hinge_joint_get_param(RID joint,PhysicsServer.HingeJointParam param)"},{"name":"hinge_joint_set_flag","fun":" void hinge_joint_set_flag(RID joint,PhysicsServer.HingeJointFlag flag,bool enabled)"},{"name":"hinge_joint_set_param","fun":" void hinge_joint_set_param(RID joint,PhysicsServer.HingeJointParam param,float value)"},{"name":"joint_create_cone_twist","fun":" RID joint_create_cone_twist(RID body_A,Transform local_ref_A,RID body_B,Transform local_ref_B)"},{"name":"joint_create_generic_6dof","fun":" RID joint_create_generic_6dof(RID body_A,Transform local_ref_A,RID body_B,Transform local_ref_B)"},{"name":"joint_create_hinge","fun":" RID joint_create_hinge(RID body_A,Transform hinge_A,RID body_B,Transform hinge_B)"},{"name":"joint_create_pin","fun":" RID joint_create_pin(RID body_A,Vector3 local_A,RID body_B,Vector3 local_B)"},{"name":"joint_create_slider","fun":" RID joint_create_slider(RID body_A,Transform local_ref_A,RID body_B,Transform local_ref_B)"},{"name":"joint_get_solver_priority","fun":"const int joint_get_solver_priority(RID joint)"},{"name":"joint_get_type","fun":"const int joint_get_type(RID joint)"},{"name":"joint_set_solver_priority","fun":" void joint_set_solver_priority(RID joint,int priority)"},{"name":"pin_joint_get_local_a","fun":"const Vector3 pin_joint_get_local_a(RID joint)"},{"name":"pin_joint_get_local_b","fun":"const Vector3 pin_joint_get_local_b(RID joint)"},{"name":"pin_joint_get_param","fun":"const float pin_joint_get_param(RID joint,PhysicsServer.PinJointParam param)"},{"name":"pin_joint_set_local_a","fun":" void pin_joint_set_local_a(RID joint,Vector3 local_A)"},{"name":"pin_joint_set_local_b","fun":" void pin_joint_set_local_b(RID joint,Vector3 local_B)"},{"name":"pin_joint_set_param","fun":" void pin_joint_set_param(RID joint,PhysicsServer.PinJointParam param,float value)"},{"name":"set_active","fun":" void set_active(bool active)"},{"name":"set_collision_iterations","fun":" void set_collision_iterations(int iterations)"},{"name":"shape_create","fun":" RID shape_create(int type)"},{"name":"shape_get_data","fun":"const Variant shape_get_data(RID shape)"},{"name":"shape_get_type","fun":"const int shape_get_type(RID shape)"},{"name":"shape_set_data","fun":" void shape_set_data(RID shape,Variant data)"},{"name":"slider_joint_get_param","fun":"const float slider_joint_get_param(RID joint,PhysicsServer.SliderJointParam param)"},{"name":"slider_joint_set_param","fun":" void slider_joint_set_param(RID joint,PhysicsServer.SliderJointParam param,float value)"},{"name":"space_create","fun":" RID space_create()"},{"name":"space_get_direct_state","fun":" PhysicsDirectSpaceState space_get_direct_state(RID space)"},{"name":"space_get_param","fun":"const float space_get_param(RID space,PhysicsServer.SpaceParameter param)"},{"name":"space_is_active","fun":"const bool space_is_active(RID space)"},{"name":"space_set_active","fun":" void space_set_active(RID space,bool active)"},{"name":"space_set_param","fun":" void space_set_param(RID space,PhysicsServer.SpaceParameter param,float value)"}],"signals":[]}