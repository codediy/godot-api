{"name":"SoftBody","parent":"MeshInstance","comment":"A soft mesh physics body.","des":"","const":[],"enums":[],"props":[{"name":"areaAngular_stiffness","prop":"float areaAngular_stiffness  = 0.5","setget":"true"},{"name":"collision_layer","prop":"int collision_layer  = 1","setget":"true"},{"name":"collision_mask","prop":"int collision_mask  = 1","setget":"true"},{"name":"damping_coefficient","prop":"float damping_coefficient  = 0.01","setget":"true"},{"name":"drag_coefficient","prop":"float drag_coefficient  = 0.0","setget":"true"},{"name":"linear_stiffness","prop":"float linear_stiffness  = 0.5","setget":"true"},{"name":"parent_collision_ignore","prop":"NodePath parent_collision_ignore  = NodePath(&quot;&quot;)","setget":"true"},{"name":"physics_enabled","prop":"bool physics_enabled  = true","setget":"true"},{"name":"pose_matching_coefficient","prop":"float pose_matching_coefficient  = 0.0","setget":"true"},{"name":"pressure_coefficient","prop":"float pressure_coefficient  = 0.0","setget":"true"},{"name":"ray_pickable","prop":"bool ray_pickable  = true","setget":"true"},{"name":"simulation_precision","prop":"int simulation_precision  = 5","setget":"true"},{"name":"total_mass","prop":"float total_mass  = 1.0","setget":"true"},{"name":"volume_stiffness","prop":"float volume_stiffness  = 0.5","setget":"true"}],"setters":["set_areaAngular_stiffness(float value)","set_collision_layer(int value)","set_collision_mask(int value)","set_damping_coefficient(float value)","set_drag_coefficient(float value)","set_linear_stiffness(float value)","set_parent_collision_ignore(NodePath value)","set_physics_enabled(bool value)","set_pose_matching_coefficient(float value)","set_pressure_coefficient(float value)","set_ray_pickable(bool value)","set_simulation_precision(int value)","set_total_mass(float value)","set_volume_stiffness(float value)"],"getters":["float get_areaAngular_stiffness()","int get_collision_layer()","int get_collision_mask()","float get_damping_coefficient()","float get_drag_coefficient()","float get_linear_stiffness()","NodePath get_parent_collision_ignore()","bool is_physics_enabled()","float get_pose_matching_coefficient()","float get_pressure_coefficient()","bool is_ray_pickable()","int get_simulation_precision()","float get_total_mass()","float get_volume_stiffness()"],"methods":[{"name":"add_collision_exception_with","fun":" void add_collision_exception_with(Node body)"},{"name":"get_collision_exceptions","fun":" Array get_collision_exceptions()"},{"name":"get_collision_layer_bit","fun":"const bool get_collision_layer_bit(int bit)"},{"name":"get_collision_mask_bit","fun":"const bool get_collision_mask_bit(int bit)"},{"name":"get_point_transform","fun":" Vector3 get_point_transform(int point_index)"},{"name":"is_point_pinned","fun":"const bool is_point_pinned(int point_index)"},{"name":"remove_collision_exception_with","fun":" void remove_collision_exception_with(Node body)"},{"name":"set_collision_layer_bit","fun":" void set_collision_layer_bit(int bit,bool value)"},{"name":"set_collision_mask_bit","fun":" void set_collision_mask_bit(int bit,bool value)"},{"name":"set_point_pinned","fun":" void set_point_pinned(int point_index,bool pinned,NodePath attachment_path=NodePath(&quot;&quot;))"}],"signals":[]}