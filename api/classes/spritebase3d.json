{"name":"SpriteBase3D","parent":"GeometryInstance","comment":"2D sprite node in 3D environment.","des":"","const":[],"enums":[{"name":"DrawFlags","value":[{"key":"FLAG_TRANSPARENT = 0"},{"key":"FLAG_SHADED = 1"},{"key":"FLAG_DOUBLE_SIDED = 2"},{"key":"FLAG_MAX = 3"}]},{"name":"AlphaCutMode","value":[{"key":"ALPHA_CUT_DISABLED = 0"},{"key":"ALPHA_CUT_DISCARD = 1"},{"key":"ALPHA_CUT_OPAQUE_PREPASS = 2"}]}],"props":[{"name":"alpha_cut","prop":"int alpha_cut  = 0","setget":"true"},{"name":"axis","prop":"int axis  = 2","setget":"true"},{"name":"billboard","prop":"int billboard  = 0","setget":"true"},{"name":"centered","prop":"bool centered  = true","setget":"true"},{"name":"double_sided","prop":"bool double_sided  = true","setget":"true"},{"name":"flip_h","prop":"bool flip_h  = false","setget":"true"},{"name":"flip_v","prop":"bool flip_v  = false","setget":"true"},{"name":"modulate","prop":"Color modulate  = Color( 1, 1, 1, 1 )","setget":"true"},{"name":"offset","prop":"Vector2 offset  = Vector2( 0, 0 )","setget":"true"},{"name":"opacity","prop":"float opacity  = 1.0","setget":"true"},{"name":"pixel_size","prop":"float pixel_size  = 0.01","setget":"true"},{"name":"shaded","prop":"bool shaded  = false","setget":"true"},{"name":"transparent","prop":"bool transparent  = true","setget":"true"}],"setters":["set_alpha_cut_mode(int value)","set_axis(int value)","set_billboard_mode(int value)","set_centered(bool value)","set_draw_flag(bool value)","set_flip_h(bool value)","set_flip_v(bool value)","set_modulate(Color value)","set_offset(Vector2 value)","set_opacity(float value)","set_pixel_size(float value)","set_draw_flag(bool value)","set_draw_flag(bool value)"],"getters":["int get_alpha_cut_mode()","int get_axis()","int get_billboard_mode()","bool is_centered()","bool get_draw_flag()","bool is_flipped_h()","bool is_flipped_v()","Color get_modulate()","Vector2 get_offset()","float get_opacity()","float get_pixel_size()","bool get_draw_flag()","bool get_draw_flag()"],"methods":[{"name":"generate_triangle_mesh","fun":"const TriangleMesh generate_triangle_mesh()"},{"name":"get_draw_flag","fun":"const bool get_draw_flag(int flag)"},{"name":"get_item_rect","fun":"const Rect2 get_item_rect()"},{"name":"set_draw_flag","fun":" void set_draw_flag(SpriteBase3D.DrawFlags flag,bool enabled)"}],"signals":[]}