{"name":"Texture","parent":"Resource","comment":"Texture for 2D and 3D.","des":"","const":[],"enums":[{"name":"Flags","value":[{"key":"FLAGS_DEFAULT = 7"},{"key":"FLAG_MIPMAPS = 1"},{"key":"FLAG_REPEAT = 2"},{"key":"FLAG_FILTER = 4"},{"key":"FLAG_ANISOTROPIC_FILTER = 8"},{"key":"FLAG_CONVERT_TO_LINEAR = 16"},{"key":"FLAG_MIRRORED_REPEAT = 32"},{"key":"FLAG_VIDEO_SURFACE = 2048"}]}],"props":[{"name":"flags","prop":"int flags  = 4","setget":"true"}],"setters":["set_flags(int value)"],"getters":["int get_flags()"],"methods":[{"name":"draw","fun":"const void draw(RID canvas_item,Vector2 position,Color modulate=Color( 1, 1, 1, 1 ),bool transpose=false,Texture normal_map=null)"},{"name":"draw_rect","fun":"const void draw_rect(RID canvas_item,Rect2 rect,bool tile,Color modulate=Color( 1, 1, 1, 1 ),bool transpose=false,Texture normal_map=null)"},{"name":"draw_rect_region","fun":"const void draw_rect_region(RID canvas_item,Rect2 rect,Rect2 src_rect,Color modulate=Color( 1, 1, 1, 1 ),bool transpose=false,Texture normal_map=null,bool clip_uv=true)"},{"name":"get_data","fun":"const Image get_data()"},{"name":"get_height","fun":"const int get_height()"},{"name":"get_size","fun":"const Vector2 get_size()"},{"name":"get_width","fun":"const int get_width()"},{"name":"has_alpha","fun":"const bool has_alpha()"}],"signals":[]}