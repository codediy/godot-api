{"name":"VisualServer","parent":"Object","comment":"Server for anything visible.","des":"","const":[{"name":"NO_INDEX_ARRAY","value":"-1"},{"name":"ARRAY_WEIGHTS_SIZE","value":"4"},{"name":"CANVAS_ITEM_Z_MIN","value":"-4096"},{"name":"CANVAS_ITEM_Z_MAX","value":"4096"},{"name":"MAX_GLOW_LEVELS","value":"7"},{"name":"MAX_CURSORS","value":"8"},{"name":"MATERIAL_RENDER_PRIORITY_MIN","value":"-128"},{"name":"MATERIAL_RENDER_PRIORITY_MAX","value":"127"}],"enums":[{"name":"CubeMapSide","value":[{"key":"CUBEMAP_LEFT = 0"},{"key":"CUBEMAP_RIGHT = 1"},{"key":"CUBEMAP_BOTTOM = 2"},{"key":"CUBEMAP_TOP = 3"},{"key":"CUBEMAP_FRONT = 4"},{"key":"CUBEMAP_BACK = 5"}]},{"name":"TextureType","value":[{"key":"TEXTURE_TYPE_2D = 0"},{"key":"TEXTURE_TYPE_CUBEMAP = 2"},{"key":"TEXTURE_TYPE_2D_ARRAY = 3"},{"key":"TEXTURE_TYPE_3D = 4"}]},{"name":"TextureFlags","value":[{"key":"TEXTURE_FLAG_MIPMAPS = 1"},{"key":"TEXTURE_FLAG_REPEAT = 2"},{"key":"TEXTURE_FLAG_FILTER = 4"},{"key":"TEXTURE_FLAG_ANISOTROPIC_FILTER = 8"},{"key":"TEXTURE_FLAG_CONVERT_TO_LINEAR = 16"},{"key":"TEXTURE_FLAG_MIRRORED_REPEAT = 32"},{"key":"TEXTURE_FLAG_USED_FOR_STREAMING = 2048"},{"key":"TEXTURE_FLAGS_DEFAULT = 7"}]},{"name":"ShaderMode","value":[{"key":"SHADER_SPATIAL = 0"},{"key":"SHADER_CANVAS_ITEM = 1"},{"key":"SHADER_PARTICLES = 2"},{"key":"SHADER_MAX = 3"}]},{"name":"ArrayType","value":[{"key":"ARRAY_VERTEX = 0"},{"key":"ARRAY_NORMAL = 1"},{"key":"ARRAY_TANGENT = 2"},{"key":"ARRAY_COLOR = 3"},{"key":"ARRAY_TEX_UV = 4"},{"key":"ARRAY_TEX_UV2 = 5"},{"key":"ARRAY_BONES = 6"},{"key":"ARRAY_WEIGHTS = 7"},{"key":"ARRAY_INDEX = 8"},{"key":"ARRAY_MAX = 9"}]},{"name":"ArrayFormat","value":[{"key":"ARRAY_FORMAT_VERTEX = 1"},{"key":"ARRAY_FORMAT_NORMAL = 2"},{"key":"ARRAY_FORMAT_TANGENT = 4"},{"key":"ARRAY_FORMAT_COLOR = 8"},{"key":"ARRAY_FORMAT_TEX_UV = 16"},{"key":"ARRAY_FORMAT_TEX_UV2 = 32"},{"key":"ARRAY_FORMAT_BONES = 64"},{"key":"ARRAY_FORMAT_WEIGHTS = 128"},{"key":"ARRAY_FORMAT_INDEX = 256"},{"key":"ARRAY_COMPRESS_VERTEX = 512"},{"key":"ARRAY_COMPRESS_NORMAL = 1024"},{"key":"ARRAY_COMPRESS_TANGENT = 2048"},{"key":"ARRAY_COMPRESS_COLOR = 4096"},{"key":"ARRAY_COMPRESS_TEX_UV = 8192"},{"key":"ARRAY_COMPRESS_TEX_UV2 = 16384"},{"key":"ARRAY_COMPRESS_BONES = 32768"},{"key":"ARRAY_COMPRESS_WEIGHTS = 65536"},{"key":"ARRAY_COMPRESS_INDEX = 131072"},{"key":"ARRAY_FLAG_USE_2D_VERTICES = 262144"},{"key":"ARRAY_FLAG_USE_16_BIT_BONES = 524288"},{"key":"ARRAY_FLAG_USE_OCTAHEDRAL_COMPRESSION = 2097152"},{"key":"ARRAY_COMPRESS_DEFAULT = 2194432"}]},{"name":"PrimitiveType","value":[{"key":"PRIMITIVE_POINTS = 0"},{"key":"PRIMITIVE_LINES = 1"},{"key":"PRIMITIVE_LINE_STRIP = 2"},{"key":"PRIMITIVE_LINE_LOOP = 3"},{"key":"PRIMITIVE_TRIANGLES = 4"},{"key":"PRIMITIVE_TRIANGLE_STRIP = 5"},{"key":"PRIMITIVE_TRIANGLE_FAN = 6"},{"key":"PRIMITIVE_MAX = 7"}]},{"name":"BlendShapeMode","value":[{"key":"BLEND_SHAPE_MODE_NORMALIZED = 0"},{"key":"BLEND_SHAPE_MODE_RELATIVE = 1"}]},{"name":"LightType","value":[{"key":"LIGHT_DIRECTIONAL = 0"},{"key":"LIGHT_OMNI = 1"},{"key":"LIGHT_SPOT = 2"}]},{"name":"LightParam","value":[{"key":"LIGHT_PARAM_ENERGY = 0"},{"key":"LIGHT_PARAM_INDIRECT_ENERGY = 1"},{"key":"LIGHT_PARAM_SIZE = 2"},{"key":"LIGHT_PARAM_SPECULAR = 3"},{"key":"LIGHT_PARAM_RANGE = 4"},{"key":"LIGHT_PARAM_ATTENUATION = 5"},{"key":"LIGHT_PARAM_SPOT_ANGLE = 6"},{"key":"LIGHT_PARAM_SPOT_ATTENUATION = 7"},{"key":"LIGHT_PARAM_CONTACT_SHADOW_SIZE = 8"},{"key":"LIGHT_PARAM_SHADOW_MAX_DISTANCE = 9"},{"key":"LIGHT_PARAM_SHADOW_SPLIT_1_OFFSET = 10"},{"key":"LIGHT_PARAM_SHADOW_SPLIT_2_OFFSET = 11"},{"key":"LIGHT_PARAM_SHADOW_SPLIT_3_OFFSET = 12"},{"key":"LIGHT_PARAM_SHADOW_NORMAL_BIAS = 13"},{"key":"LIGHT_PARAM_SHADOW_BIAS = 14"},{"key":"LIGHT_PARAM_SHADOW_BIAS_SPLIT_SCALE = 15"},{"key":"LIGHT_PARAM_MAX = 16"}]},{"name":"LightBakeMode","value":[{"key":"LIGHT_BAKE_DISABLED = 0"},{"key":"LIGHT_BAKE_INDIRECT = 1"},{"key":"LIGHT_BAKE_ALL = 2"}]},{"name":"LightOmniShadowMode","value":[{"key":"LIGHT_OMNI_SHADOW_DUAL_PARABOLOID = 0"},{"key":"LIGHT_OMNI_SHADOW_CUBE = 1"}]},{"name":"LightOmniShadowDetail","value":[{"key":"LIGHT_OMNI_SHADOW_DETAIL_VERTICAL = 0"},{"key":"LIGHT_OMNI_SHADOW_DETAIL_HORIZONTAL = 1"}]},{"name":"LightDirectionalShadowMode","value":[{"key":"LIGHT_DIRECTIONAL_SHADOW_ORTHOGONAL = 0"},{"key":"LIGHT_DIRECTIONAL_SHADOW_PARALLEL_2_SPLITS = 1"},{"key":"LIGHT_DIRECTIONAL_SHADOW_PARALLEL_4_SPLITS = 2"}]},{"name":"LightDirectionalShadowDepthRangeMode","value":[{"key":"LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_STABLE = 0"},{"key":"LIGHT_DIRECTIONAL_SHADOW_DEPTH_RANGE_OPTIMIZED = 1"}]},{"name":"ViewportUpdateMode","value":[{"key":"VIEWPORT_UPDATE_DISABLED = 0"},{"key":"VIEWPORT_UPDATE_ONCE = 1"},{"key":"VIEWPORT_UPDATE_WHEN_VISIBLE = 2"},{"key":"VIEWPORT_UPDATE_ALWAYS = 3"}]},{"name":"ViewportClearMode","value":[{"key":"VIEWPORT_CLEAR_ALWAYS = 0"},{"key":"VIEWPORT_CLEAR_NEVER = 1"},{"key":"VIEWPORT_CLEAR_ONLY_NEXT_FRAME = 2"}]},{"name":"ViewportMSAA","value":[{"key":"VIEWPORT_MSAA_DISABLED = 0"},{"key":"VIEWPORT_MSAA_2X = 1"},{"key":"VIEWPORT_MSAA_4X = 2"},{"key":"VIEWPORT_MSAA_8X = 3"},{"key":"VIEWPORT_MSAA_16X = 4"},{"key":"VIEWPORT_MSAA_EXT_2X = 5"},{"key":"VIEWPORT_MSAA_EXT_4X = 6"}]},{"name":"ViewportUsage","value":[{"key":"VIEWPORT_USAGE_2D = 0"},{"key":"VIEWPORT_USAGE_2D_NO_SAMPLING = 1"},{"key":"VIEWPORT_USAGE_3D = 2"},{"key":"VIEWPORT_USAGE_3D_NO_EFFECTS = 3"}]},{"name":"ViewportRenderInfo","value":[{"key":"VIEWPORT_RENDER_INFO_OBJECTS_IN_FRAME = 0"},{"key":"VIEWPORT_RENDER_INFO_VERTICES_IN_FRAME = 1"},{"key":"VIEWPORT_RENDER_INFO_MATERIAL_CHANGES_IN_FRAME = 2"},{"key":"VIEWPORT_RENDER_INFO_SHADER_CHANGES_IN_FRAME = 3"},{"key":"VIEWPORT_RENDER_INFO_SURFACE_CHANGES_IN_FRAME = 4"},{"key":"VIEWPORT_RENDER_INFO_DRAW_CALLS_IN_FRAME = 5"},{"key":"VIEWPORT_RENDER_INFO_2D_ITEMS_IN_FRAME = 6"},{"key":"VIEWPORT_RENDER_INFO_2D_DRAW_CALLS_IN_FRAME = 7"},{"key":"VIEWPORT_RENDER_INFO_MAX = 8"}]},{"name":"ViewportDebugDraw","value":[{"key":"VIEWPORT_DEBUG_DRAW_DISABLED = 0"},{"key":"VIEWPORT_DEBUG_DRAW_UNSHADED = 1"},{"key":"VIEWPORT_DEBUG_DRAW_OVERDRAW = 2"},{"key":"VIEWPORT_DEBUG_DRAW_WIREFRAME = 3"}]},{"name":"ScenarioDebugMode","value":[{"key":"SCENARIO_DEBUG_DISABLED = 0"},{"key":"SCENARIO_DEBUG_WIREFRAME = 1"},{"key":"SCENARIO_DEBUG_OVERDRAW = 2"},{"key":"SCENARIO_DEBUG_SHADELESS = 3"}]},{"name":"InstanceType","value":[{"key":"INSTANCE_NONE = 0"},{"key":"INSTANCE_MESH = 1"},{"key":"INSTANCE_MULTIMESH = 2"},{"key":"INSTANCE_IMMEDIATE = 3"},{"key":"INSTANCE_PARTICLES = 4"},{"key":"INSTANCE_LIGHT = 5"},{"key":"INSTANCE_REFLECTION_PROBE = 6"},{"key":"INSTANCE_GI_PROBE = 7"},{"key":"INSTANCE_LIGHTMAP_CAPTURE = 8"},{"key":"INSTANCE_MAX = 9"},{"key":"INSTANCE_GEOMETRY_MASK = 30"}]},{"name":"InstanceFlags","value":[{"key":"INSTANCE_FLAG_USE_BAKED_LIGHT = 0"},{"key":"INSTANCE_FLAG_DRAW_NEXT_FRAME_IF_VISIBLE = 1"},{"key":"INSTANCE_FLAG_MAX = 2"}]},{"name":"ShadowCastingSetting","value":[{"key":"SHADOW_CASTING_SETTING_OFF = 0"},{"key":"SHADOW_CASTING_SETTING_ON = 1"},{"key":"SHADOW_CASTING_SETTING_DOUBLE_SIDED = 2"},{"key":"SHADOW_CASTING_SETTING_SHADOWS_ONLY = 3"}]},{"name":"NinePatchAxisMode","value":[{"key":"NINE_PATCH_STRETCH = 0"},{"key":"NINE_PATCH_TILE = 1"},{"key":"NINE_PATCH_TILE_FIT = 2"}]},{"name":"CanvasLightMode","value":[{"key":"CANVAS_LIGHT_MODE_ADD = 0"},{"key":"CANVAS_LIGHT_MODE_SUB = 1"},{"key":"CANVAS_LIGHT_MODE_MIX = 2"},{"key":"CANVAS_LIGHT_MODE_MASK = 3"}]},{"name":"CanvasLightShadowFilter","value":[{"key":"CANVAS_LIGHT_FILTER_NONE = 0"},{"key":"CANVAS_LIGHT_FILTER_PCF3 = 1"},{"key":"CANVAS_LIGHT_FILTER_PCF5 = 2"},{"key":"CANVAS_LIGHT_FILTER_PCF7 = 3"},{"key":"CANVAS_LIGHT_FILTER_PCF9 = 4"},{"key":"CANVAS_LIGHT_FILTER_PCF13 = 5"}]},{"name":"CanvasOccluderPolygonCullMode","value":[{"key":"CANVAS_OCCLUDER_POLYGON_CULL_DISABLED = 0"},{"key":"CANVAS_OCCLUDER_POLYGON_CULL_CLOCKWISE = 1"},{"key":"CANVAS_OCCLUDER_POLYGON_CULL_COUNTER_CLOCKWISE = 2"}]},{"name":"RenderInfo","value":[{"key":"INFO_OBJECTS_IN_FRAME = 0"},{"key":"INFO_VERTICES_IN_FRAME = 1"},{"key":"INFO_MATERIAL_CHANGES_IN_FRAME = 2"},{"key":"INFO_SHADER_CHANGES_IN_FRAME = 3"},{"key":"INFO_SURFACE_CHANGES_IN_FRAME = 4"},{"key":"INFO_DRAW_CALLS_IN_FRAME = 5"},{"key":"INFO_2D_ITEMS_IN_FRAME = 6"},{"key":"INFO_2D_DRAW_CALLS_IN_FRAME = 7"},{"key":"INFO_USAGE_VIDEO_MEM_TOTAL = 8"},{"key":"INFO_VIDEO_MEM_USED = 9"},{"key":"INFO_TEXTURE_MEM_USED = 10"},{"key":"INFO_VERTEX_MEM_USED = 11"}]},{"name":"Features","value":[{"key":"FEATURE_SHADERS = 0"},{"key":"FEATURE_MULTITHREADED = 1"}]},{"name":"MultimeshTransformFormat","value":[{"key":"MULTIMESH_TRANSFORM_2D = 0"},{"key":"MULTIMESH_TRANSFORM_3D = 1"}]},{"name":"MultimeshColorFormat","value":[{"key":"MULTIMESH_COLOR_NONE = 0"},{"key":"MULTIMESH_COLOR_8BIT = 1"},{"key":"MULTIMESH_COLOR_FLOAT = 2"}]},{"name":"MultimeshCustomDataFormat","value":[{"key":"MULTIMESH_CUSTOM_DATA_NONE = 0"},{"key":"MULTIMESH_CUSTOM_DATA_8BIT = 1"},{"key":"MULTIMESH_CUSTOM_DATA_FLOAT = 2"}]},{"name":"ReflectionProbeUpdateMode","value":[{"key":"REFLECTION_PROBE_UPDATE_ONCE = 0"},{"key":"REFLECTION_PROBE_UPDATE_ALWAYS = 1"}]},{"name":"ParticlesDrawOrder","value":[{"key":"PARTICLES_DRAW_ORDER_INDEX = 0"},{"key":"PARTICLES_DRAW_ORDER_LIFETIME = 1"},{"key":"PARTICLES_DRAW_ORDER_VIEW_DEPTH = 2"}]},{"name":"EnvironmentBG","value":[{"key":"ENV_BG_CLEAR_COLOR = 0"},{"key":"ENV_BG_COLOR = 1"},{"key":"ENV_BG_SKY = 2"},{"key":"ENV_BG_COLOR_SKY = 3"},{"key":"ENV_BG_CANVAS = 4"},{"key":"ENV_BG_KEEP = 5"},{"key":"ENV_BG_MAX = 7"}]},{"name":"EnvironmentDOFBlurQuality","value":[{"key":"ENV_DOF_BLUR_QUALITY_LOW = 0"},{"key":"ENV_DOF_BLUR_QUALITY_MEDIUM = 1"},{"key":"ENV_DOF_BLUR_QUALITY_HIGH = 2"}]},{"name":"EnvironmentGlowBlendMode","value":[{"key":"GLOW_BLEND_MODE_ADDITIVE = 0"},{"key":"GLOW_BLEND_MODE_SCREEN = 1"},{"key":"GLOW_BLEND_MODE_SOFTLIGHT = 2"},{"key":"GLOW_BLEND_MODE_REPLACE = 3"}]},{"name":"EnvironmentToneMapper","value":[{"key":"ENV_TONE_MAPPER_LINEAR = 0"},{"key":"ENV_TONE_MAPPER_REINHARD = 1"},{"key":"ENV_TONE_MAPPER_FILMIC = 2"},{"key":"ENV_TONE_MAPPER_ACES = 3"},{"key":"ENV_TONE_MAPPER_ACES_FITTED = 4"}]},{"name":"EnvironmentSSAOQuality","value":[{"key":"ENV_SSAO_QUALITY_LOW = 0"},{"key":"ENV_SSAO_QUALITY_MEDIUM = 1"},{"key":"ENV_SSAO_QUALITY_HIGH = 2"}]},{"name":"EnvironmentSSAOBlur","value":[{"key":"ENV_SSAO_BLUR_DISABLED = 0"},{"key":"ENV_SSAO_BLUR_1x1 = 1"},{"key":"ENV_SSAO_BLUR_2x2 = 2"},{"key":"ENV_SSAO_BLUR_3x3 = 3"}]}],"props":[{"name":"render_loop_enabled","prop":"bool render_loop_enabled  ","setget":"true"}],"setters":["set_render_loop_enabled(bool value)"],"getters":["bool is_render_loop_enabled()"],"methods":[{"name":"black_bars_set_images","fun":" void black_bars_set_images(RID left,RID top,RID right,RID bottom)"},{"name":"black_bars_set_margins","fun":" void black_bars_set_margins(int left,int top,int right,int bottom)"},{"name":"camera_create","fun":" RID camera_create()"},{"name":"camera_set_cull_mask","fun":" void camera_set_cull_mask(RID camera,int layers)"},{"name":"camera_set_environment","fun":" void camera_set_environment(RID camera,RID env)"},{"name":"camera_set_frustum","fun":" void camera_set_frustum(RID camera,float size,Vector2 offset,float z_near,float z_far)"},{"name":"camera_set_orthogonal","fun":" void camera_set_orthogonal(RID camera,float size,float z_near,float z_far)"},{"name":"camera_set_perspective","fun":" void camera_set_perspective(RID camera,float fovy_degrees,float z_near,float z_far)"},{"name":"camera_set_transform","fun":" void camera_set_transform(RID camera,Transform transform)"},{"name":"camera_set_use_vertical_aspect","fun":" void camera_set_use_vertical_aspect(RID camera,bool enable)"},{"name":"canvas_create","fun":" RID canvas_create()"},{"name":"canvas_item_add_circle","fun":" void canvas_item_add_circle(RID item,Vector2 pos,float radius,Color color)"},{"name":"canvas_item_add_clip_ignore","fun":" void canvas_item_add_clip_ignore(RID item,bool ignore)"},{"name":"canvas_item_add_line","fun":" void canvas_item_add_line(RID item,Vector2 from,Vector2 to,Color color,float width=1.0,bool antialiased=false)"},{"name":"canvas_item_add_mesh","fun":" void canvas_item_add_mesh(RID item,RID mesh,Transform2D transform=Transform2D( 1, 0, 0, 1, 0, 0 ),Color modulate=Color( 1, 1, 1, 1 ),RID texture,RID normal_map)"},{"name":"canvas_item_add_multimesh","fun":" void canvas_item_add_multimesh(RID item,RID mesh,RID texture,RID normal_map)"},{"name":"canvas_item_add_nine_patch","fun":" void canvas_item_add_nine_patch(RID item,Rect2 rect,Rect2 source,RID texture,Vector2 topleft,Vector2 bottomright,VisualServer.NinePatchAxisMode x_axis_mode=0,VisualServer.NinePatchAxisMode y_axis_mode=0,bool draw_center=true,Color modulate=Color( 1, 1, 1, 1 ),RID normal_map)"},{"name":"canvas_item_add_particles","fun":" void canvas_item_add_particles(RID item,RID particles,RID texture,RID normal_map)"},{"name":"canvas_item_add_polygon","fun":" void canvas_item_add_polygon(RID item,PoolVector2Array points,PoolColorArray colors,PoolVector2Array uvs=PoolVector2Array(  ),RID texture,RID normal_map,bool antialiased=false)"},{"name":"canvas_item_add_polyline","fun":" void canvas_item_add_polyline(RID item,PoolVector2Array points,PoolColorArray colors,float width=1.0,bool antialiased=false)"},{"name":"canvas_item_add_primitive","fun":" void canvas_item_add_primitive(RID item,PoolVector2Array points,PoolColorArray colors,PoolVector2Array uvs,RID texture,float width=1.0,RID normal_map)"},{"name":"canvas_item_add_rect","fun":" void canvas_item_add_rect(RID item,Rect2 rect,Color color)"},{"name":"canvas_item_add_set_transform","fun":" void canvas_item_add_set_transform(RID item,Transform2D transform)"},{"name":"canvas_item_add_texture_rect","fun":" void canvas_item_add_texture_rect(RID item,Rect2 rect,RID texture,bool tile=false,Color modulate=Color( 1, 1, 1, 1 ),bool transpose=false,RID normal_map)"},{"name":"canvas_item_add_texture_rect_region","fun":" void canvas_item_add_texture_rect_region(RID item,Rect2 rect,RID texture,Rect2 src_rect,Color modulate=Color( 1, 1, 1, 1 ),bool transpose=false,RID normal_map,bool clip_uv=true)"},{"name":"canvas_item_add_triangle_array","fun":" void canvas_item_add_triangle_array(RID item,PoolIntArray indices,PoolVector2Array points,PoolColorArray colors,PoolVector2Array uvs=PoolVector2Array(  ),PoolIntArray bones=PoolIntArray(  ),PoolRealArray weights=PoolRealArray(  ),RID texture,int count=-1,RID normal_map,bool antialiased=false,bool antialiasing_use_indices=false)"},{"name":"canvas_item_clear","fun":" void canvas_item_clear(RID item)"},{"name":"canvas_item_create","fun":" RID canvas_item_create()"},{"name":"canvas_item_set_clip","fun":" void canvas_item_set_clip(RID item,bool clip)"},{"name":"canvas_item_set_copy_to_backbuffer","fun":" void canvas_item_set_copy_to_backbuffer(RID item,bool enabled,Rect2 rect)"},{"name":"canvas_item_set_custom_rect","fun":" void canvas_item_set_custom_rect(RID item,bool use_custom_rect,Rect2 rect=Rect2( 0, 0, 0, 0 ))"},{"name":"canvas_item_set_distance_field_mode","fun":" void canvas_item_set_distance_field_mode(RID item,bool enabled)"},{"name":"canvas_item_set_draw_behind_parent","fun":" void canvas_item_set_draw_behind_parent(RID item,bool enabled)"},{"name":"canvas_item_set_draw_index","fun":" void canvas_item_set_draw_index(RID item,int index)"},{"name":"canvas_item_set_light_mask","fun":" void canvas_item_set_light_mask(RID item,int mask)"},{"name":"canvas_item_set_material","fun":" void canvas_item_set_material(RID item,RID material)"},{"name":"canvas_item_set_modulate","fun":" void canvas_item_set_modulate(RID item,Color color)"},{"name":"canvas_item_set_parent","fun":" void canvas_item_set_parent(RID item,RID parent)"},{"name":"canvas_item_set_self_modulate","fun":" void canvas_item_set_self_modulate(RID item,Color color)"},{"name":"canvas_item_set_sort_children_by_y","fun":" void canvas_item_set_sort_children_by_y(RID item,bool enabled)"},{"name":"canvas_item_set_transform","fun":" void canvas_item_set_transform(RID item,Transform2D transform)"},{"name":"canvas_item_set_use_parent_material","fun":" void canvas_item_set_use_parent_material(RID item,bool enabled)"},{"name":"canvas_item_set_visible","fun":" void canvas_item_set_visible(RID item,bool visible)"},{"name":"canvas_item_set_z_as_relative_to_parent","fun":" void canvas_item_set_z_as_relative_to_parent(RID item,bool enabled)"},{"name":"canvas_item_set_z_index","fun":" void canvas_item_set_z_index(RID item,int z_index)"},{"name":"canvas_light_attach_to_canvas","fun":" void canvas_light_attach_to_canvas(RID light,RID canvas)"},{"name":"canvas_light_create","fun":" RID canvas_light_create()"},{"name":"canvas_light_occluder_attach_to_canvas","fun":" void canvas_light_occluder_attach_to_canvas(RID occluder,RID canvas)"},{"name":"canvas_light_occluder_create","fun":" RID canvas_light_occluder_create()"},{"name":"canvas_light_occluder_set_enabled","fun":" void canvas_light_occluder_set_enabled(RID occluder,bool enabled)"},{"name":"canvas_light_occluder_set_light_mask","fun":" void canvas_light_occluder_set_light_mask(RID occluder,int mask)"},{"name":"canvas_light_occluder_set_polygon","fun":" void canvas_light_occluder_set_polygon(RID occluder,RID polygon)"},{"name":"canvas_light_occluder_set_transform","fun":" void canvas_light_occluder_set_transform(RID occluder,Transform2D transform)"},{"name":"canvas_light_set_color","fun":" void canvas_light_set_color(RID light,Color color)"},{"name":"canvas_light_set_enabled","fun":" void canvas_light_set_enabled(RID light,bool enabled)"},{"name":"canvas_light_set_energy","fun":" void canvas_light_set_energy(RID light,float energy)"},{"name":"canvas_light_set_height","fun":" void canvas_light_set_height(RID light,float height)"},{"name":"canvas_light_set_item_cull_mask","fun":" void canvas_light_set_item_cull_mask(RID light,int mask)"},{"name":"canvas_light_set_item_shadow_cull_mask","fun":" void canvas_light_set_item_shadow_cull_mask(RID light,int mask)"},{"name":"canvas_light_set_layer_range","fun":" void canvas_light_set_layer_range(RID light,int min_layer,int max_layer)"},{"name":"canvas_light_set_mode","fun":" void canvas_light_set_mode(RID light,VisualServer.CanvasLightMode mode)"},{"name":"canvas_light_set_scale","fun":" void canvas_light_set_scale(RID light,float scale)"},{"name":"canvas_light_set_shadow_buffer_size","fun":" void canvas_light_set_shadow_buffer_size(RID light,int size)"},{"name":"canvas_light_set_shadow_color","fun":" void canvas_light_set_shadow_color(RID light,Color color)"},{"name":"canvas_light_set_shadow_enabled","fun":" void canvas_light_set_shadow_enabled(RID light,bool enabled)"},{"name":"canvas_light_set_shadow_filter","fun":" void canvas_light_set_shadow_filter(RID light,VisualServer.CanvasLightShadowFilter filter)"},{"name":"canvas_light_set_shadow_gradient_length","fun":" void canvas_light_set_shadow_gradient_length(RID light,float length)"},{"name":"canvas_light_set_shadow_smooth","fun":" void canvas_light_set_shadow_smooth(RID light,float smooth)"},{"name":"canvas_light_set_texture","fun":" void canvas_light_set_texture(RID light,RID texture)"},{"name":"canvas_light_set_texture_offset","fun":" void canvas_light_set_texture_offset(RID light,Vector2 offset)"},{"name":"canvas_light_set_transform","fun":" void canvas_light_set_transform(RID light,Transform2D transform)"},{"name":"canvas_light_set_z_range","fun":" void canvas_light_set_z_range(RID light,int min_z,int max_z)"},{"name":"canvas_occluder_polygon_create","fun":" RID canvas_occluder_polygon_create()"},{"name":"canvas_occluder_polygon_set_cull_mode","fun":" void canvas_occluder_polygon_set_cull_mode(RID occluder_polygon,VisualServer.CanvasOccluderPolygonCullMode mode)"},{"name":"canvas_occluder_polygon_set_shape","fun":" void canvas_occluder_polygon_set_shape(RID occluder_polygon,PoolVector2Array shape,bool closed)"},{"name":"canvas_occluder_polygon_set_shape_as_lines","fun":" void canvas_occluder_polygon_set_shape_as_lines(RID occluder_polygon,PoolVector2Array shape)"},{"name":"canvas_set_item_mirroring","fun":" void canvas_set_item_mirroring(RID canvas,RID item,Vector2 mirroring)"},{"name":"canvas_set_modulate","fun":" void canvas_set_modulate(RID canvas,Color color)"},{"name":"directional_light_create","fun":" RID directional_light_create()"},{"name":"draw","fun":" void draw(bool swap_buffers=true,float frame_step=0.0)"},{"name":"environment_create","fun":" RID environment_create()"},{"name":"environment_set_adjustment","fun":" void environment_set_adjustment(RID env,bool enable,float brightness,float contrast,float saturation,RID ramp)"},{"name":"environment_set_ambient_light","fun":" void environment_set_ambient_light(RID env,Color color,float energy=1.0,float sky_contibution=0.0)"},{"name":"environment_set_background","fun":" void environment_set_background(RID env,VisualServer.EnvironmentBG bg)"},{"name":"environment_set_bg_color","fun":" void environment_set_bg_color(RID env,Color color)"},{"name":"environment_set_bg_energy","fun":" void environment_set_bg_energy(RID env,float energy)"},{"name":"environment_set_canvas_max_layer","fun":" void environment_set_canvas_max_layer(RID env,int max_layer)"},{"name":"environment_set_dof_blur_far","fun":" void environment_set_dof_blur_far(RID env,bool enable,float distance,float transition,float far_amount,VisualServer.EnvironmentDOFBlurQuality quality)"},{"name":"environment_set_dof_blur_near","fun":" void environment_set_dof_blur_near(RID env,bool enable,float distance,float transition,float far_amount,VisualServer.EnvironmentDOFBlurQuality quality)"},{"name":"environment_set_fog","fun":" void environment_set_fog(RID env,bool enable,Color color,Color sun_color,float sun_amount)"},{"name":"environment_set_fog_depth","fun":" void environment_set_fog_depth(RID env,bool enable,float depth_begin,float depth_end,float depth_curve,bool transmit,float transmit_curve)"},{"name":"environment_set_fog_height","fun":" void environment_set_fog_height(RID env,bool enable,float min_height,float max_height,float height_curve)"},{"name":"environment_set_glow","fun":" void environment_set_glow(RID env,bool enable,int level_flags,float intensity,float strength,float bloom_threshold,VisualServer.EnvironmentGlowBlendMode blend_mode,float hdr_bleed_threshold,float hdr_bleed_scale,float hdr_luminance_cap,bool bicubic_upscale,bool high_quality)"},{"name":"environment_set_sky","fun":" void environment_set_sky(RID env,RID sky)"},{"name":"environment_set_sky_custom_fov","fun":" void environment_set_sky_custom_fov(RID env,float scale)"},{"name":"environment_set_sky_orientation","fun":" void environment_set_sky_orientation(RID env,Basis orientation)"},{"name":"environment_set_ssao","fun":" void environment_set_ssao(RID env,bool enable,float radius,float intensity,float radius2,float intensity2,float bias,float light_affect,float ao_channel_affect,Color color,VisualServer.EnvironmentSSAOQuality quality,VisualServer.EnvironmentSSAOBlur blur,float bilateral_sharpness)"},{"name":"environment_set_ssr","fun":" void environment_set_ssr(RID env,bool enable,int max_steps,float fade_in,float fade_out,float depth_tolerance,bool roughness)"},{"name":"environment_set_tonemap","fun":" void environment_set_tonemap(RID env,VisualServer.EnvironmentToneMapper tone_mapper,float exposure,float white,bool auto_exposure,float min_luminance,float max_luminance,float auto_exp_speed,float auto_exp_grey)"},{"name":"finish","fun":" void finish()"},{"name":"force_draw","fun":" void force_draw(bool swap_buffers=true,float frame_step=0.0)"},{"name":"force_sync","fun":" void force_sync()"},{"name":"free_rid","fun":" void free_rid(RID rid)"},{"name":"get_render_info","fun":" int get_render_info(int info)"},{"name":"get_test_cube","fun":" RID get_test_cube()"},{"name":"get_test_texture","fun":" RID get_test_texture()"},{"name":"get_video_adapter_name","fun":"const String get_video_adapter_name()"},{"name":"get_video_adapter_vendor","fun":"const String get_video_adapter_vendor()"},{"name":"get_white_texture","fun":" RID get_white_texture()"},{"name":"gi_probe_create","fun":" RID gi_probe_create()"},{"name":"gi_probe_get_bias","fun":"const float gi_probe_get_bias(RID probe)"},{"name":"gi_probe_get_bounds","fun":"const AABB gi_probe_get_bounds(RID probe)"},{"name":"gi_probe_get_cell_size","fun":"const float gi_probe_get_cell_size(RID probe)"},{"name":"gi_probe_get_dynamic_data","fun":"const PoolIntArray gi_probe_get_dynamic_data(RID probe)"},{"name":"gi_probe_get_dynamic_range","fun":"const int gi_probe_get_dynamic_range(RID probe)"},{"name":"gi_probe_get_energy","fun":"const float gi_probe_get_energy(RID probe)"},{"name":"gi_probe_get_normal_bias","fun":"const float gi_probe_get_normal_bias(RID probe)"},{"name":"gi_probe_get_propagation","fun":"const float gi_probe_get_propagation(RID probe)"},{"name":"gi_probe_get_to_cell_xform","fun":"const Transform gi_probe_get_to_cell_xform(RID probe)"},{"name":"gi_probe_is_compressed","fun":"const bool gi_probe_is_compressed(RID probe)"},{"name":"gi_probe_is_interior","fun":"const bool gi_probe_is_interior(RID probe)"},{"name":"gi_probe_set_bias","fun":" void gi_probe_set_bias(RID probe,float bias)"},{"name":"gi_probe_set_bounds","fun":" void gi_probe_set_bounds(RID probe,AABB bounds)"},{"name":"gi_probe_set_cell_size","fun":" void gi_probe_set_cell_size(RID probe,float range)"},{"name":"gi_probe_set_compress","fun":" void gi_probe_set_compress(RID probe,bool enable)"},{"name":"gi_probe_set_dynamic_data","fun":" void gi_probe_set_dynamic_data(RID probe,PoolIntArray data)"},{"name":"gi_probe_set_dynamic_range","fun":" void gi_probe_set_dynamic_range(RID probe,int range)"},{"name":"gi_probe_set_energy","fun":" void gi_probe_set_energy(RID probe,float energy)"},{"name":"gi_probe_set_interior","fun":" void gi_probe_set_interior(RID probe,bool enable)"},{"name":"gi_probe_set_normal_bias","fun":" void gi_probe_set_normal_bias(RID probe,float bias)"},{"name":"gi_probe_set_propagation","fun":" void gi_probe_set_propagation(RID probe,float propagation)"},{"name":"gi_probe_set_to_cell_xform","fun":" void gi_probe_set_to_cell_xform(RID probe,Transform xform)"},{"name":"has_changed","fun":"const bool has_changed()"},{"name":"has_feature","fun":"const bool has_feature(int feature)"},{"name":"has_os_feature","fun":"const bool has_os_feature(String feature)"},{"name":"immediate_begin","fun":" void immediate_begin(RID immediate,VisualServer.PrimitiveType primitive,RID texture)"},{"name":"immediate_clear","fun":" void immediate_clear(RID immediate)"},{"name":"immediate_color","fun":" void immediate_color(RID immediate,Color color)"},{"name":"immediate_create","fun":" RID immediate_create()"},{"name":"immediate_end","fun":" void immediate_end(RID immediate)"},{"name":"immediate_get_material","fun":"const RID immediate_get_material(RID immediate)"},{"name":"immediate_normal","fun":" void immediate_normal(RID immediate,Vector3 normal)"},{"name":"immediate_set_material","fun":" void immediate_set_material(RID immediate,RID material)"},{"name":"immediate_tangent","fun":" void immediate_tangent(RID immediate,Plane tangent)"},{"name":"immediate_uv","fun":" void immediate_uv(RID immediate,Vector2 tex_uv)"},{"name":"immediate_uv2","fun":" void immediate_uv2(RID immediate,Vector2 tex_uv)"},{"name":"immediate_vertex","fun":" void immediate_vertex(RID immediate,Vector3 vertex)"},{"name":"immediate_vertex_2d","fun":" void immediate_vertex_2d(RID immediate,Vector2 vertex)"},{"name":"init","fun":" void init()"},{"name":"instance_attach_object_instance_id","fun":" void instance_attach_object_instance_id(RID instance,int id)"},{"name":"instance_attach_skeleton","fun":" void instance_attach_skeleton(RID instance,RID skeleton)"},{"name":"instance_create","fun":" RID instance_create()"},{"name":"instance_create2","fun":" RID instance_create2(RID base,RID scenario)"},{"name":"instance_geometry_set_as_instance_lod","fun":" void instance_geometry_set_as_instance_lod(RID instance,RID as_lod_of_instance)"},{"name":"instance_geometry_set_cast_shadows_setting","fun":" void instance_geometry_set_cast_shadows_setting(RID instance,VisualServer.ShadowCastingSetting shadow_casting_setting)"},{"name":"instance_geometry_set_draw_range","fun":" void instance_geometry_set_draw_range(RID instance,float min,float max,float min_margin,float max_margin)"},{"name":"instance_geometry_set_flag","fun":" void instance_geometry_set_flag(RID instance,VisualServer.InstanceFlags flag,bool enabled)"},{"name":"instance_geometry_set_material_override","fun":" void instance_geometry_set_material_override(RID instance,RID material)"},{"name":"instance_set_base","fun":" void instance_set_base(RID instance,RID base)"},{"name":"instance_set_blend_shape_weight","fun":" void instance_set_blend_shape_weight(RID instance,int shape,float weight)"},{"name":"instance_set_custom_aabb","fun":" void instance_set_custom_aabb(RID instance,AABB aabb)"},{"name":"instance_set_exterior","fun":" void instance_set_exterior(RID instance,bool enabled)"},{"name":"instance_set_extra_visibility_margin","fun":" void instance_set_extra_visibility_margin(RID instance,float margin)"},{"name":"instance_set_layer_mask","fun":" void instance_set_layer_mask(RID instance,int mask)"},{"name":"instance_set_scenario","fun":" void instance_set_scenario(RID instance,RID scenario)"},{"name":"instance_set_surface_material","fun":" void instance_set_surface_material(RID instance,int surface,RID material)"},{"name":"instance_set_transform","fun":" void instance_set_transform(RID instance,Transform transform)"},{"name":"instance_set_use_lightmap","fun":" void instance_set_use_lightmap(RID instance,RID lightmap_instance,RID lightmap,int lightmap_slice=-1,Rect2 lightmap_uv_rect=Rect2( 0, 0, 1, 1 ))"},{"name":"instance_set_visible","fun":" void instance_set_visible(RID instance,bool visible)"},{"name":"instances_cull_aabb","fun":"const Array instances_cull_aabb(AABB aabb,RID scenario)"},{"name":"instances_cull_convex","fun":"const Array instances_cull_convex(Array convex,RID scenario)"},{"name":"instances_cull_ray","fun":"const Array instances_cull_ray(Vector3 from,Vector3 to,RID scenario)"},{"name":"light_directional_set_blend_splits","fun":" void light_directional_set_blend_splits(RID light,bool enable)"},{"name":"light_directional_set_shadow_depth_range_mode","fun":" void light_directional_set_shadow_depth_range_mode(RID light,VisualServer.LightDirectionalShadowDepthRangeMode range_mode)"},{"name":"light_directional_set_shadow_mode","fun":" void light_directional_set_shadow_mode(RID light,VisualServer.LightDirectionalShadowMode mode)"},{"name":"light_omni_set_shadow_detail","fun":" void light_omni_set_shadow_detail(RID light,VisualServer.LightOmniShadowDetail detail)"},{"name":"light_omni_set_shadow_mode","fun":" void light_omni_set_shadow_mode(RID light,VisualServer.LightOmniShadowMode mode)"},{"name":"light_set_bake_mode","fun":" void light_set_bake_mode(RID light,VisualServer.LightBakeMode bake_mode)"},{"name":"light_set_color","fun":" void light_set_color(RID light,Color color)"},{"name":"light_set_cull_mask","fun":" void light_set_cull_mask(RID light,int mask)"},{"name":"light_set_negative","fun":" void light_set_negative(RID light,bool enable)"},{"name":"light_set_param","fun":" void light_set_param(RID light,VisualServer.LightParam param,float value)"},{"name":"light_set_projector","fun":" void light_set_projector(RID light,RID texture)"},{"name":"light_set_reverse_cull_face_mode","fun":" void light_set_reverse_cull_face_mode(RID light,bool enabled)"},{"name":"light_set_shadow","fun":" void light_set_shadow(RID light,bool enabled)"},{"name":"light_set_shadow_color","fun":" void light_set_shadow_color(RID light,Color color)"},{"name":"light_set_use_gi","fun":" void light_set_use_gi(RID light,bool enabled)"},{"name":"lightmap_capture_create","fun":" RID lightmap_capture_create()"},{"name":"lightmap_capture_get_bounds","fun":"const AABB lightmap_capture_get_bounds(RID capture)"},{"name":"lightmap_capture_get_energy","fun":"const float lightmap_capture_get_energy(RID capture)"},{"name":"lightmap_capture_get_octree","fun":"const PoolByteArray lightmap_capture_get_octree(RID capture)"},{"name":"lightmap_capture_get_octree_cell_subdiv","fun":"const int lightmap_capture_get_octree_cell_subdiv(RID capture)"},{"name":"lightmap_capture_get_octree_cell_transform","fun":"const Transform lightmap_capture_get_octree_cell_transform(RID capture)"},{"name":"lightmap_capture_is_interior","fun":"const bool lightmap_capture_is_interior(RID capture)"},{"name":"lightmap_capture_set_bounds","fun":" void lightmap_capture_set_bounds(RID capture,AABB bounds)"},{"name":"lightmap_capture_set_energy","fun":" void lightmap_capture_set_energy(RID capture,float energy)"},{"name":"lightmap_capture_set_interior","fun":" void lightmap_capture_set_interior(RID capture,bool interior)"},{"name":"lightmap_capture_set_octree","fun":" void lightmap_capture_set_octree(RID capture,PoolByteArray octree)"},{"name":"lightmap_capture_set_octree_cell_subdiv","fun":" void lightmap_capture_set_octree_cell_subdiv(RID capture,int subdiv)"},{"name":"lightmap_capture_set_octree_cell_transform","fun":" void lightmap_capture_set_octree_cell_transform(RID capture,Transform xform)"},{"name":"make_sphere_mesh","fun":" RID make_sphere_mesh(int latitudes,int longitudes,float radius)"},{"name":"material_create","fun":" RID material_create()"},{"name":"material_get_param","fun":"const Variant material_get_param(RID material,String parameter)"},{"name":"material_get_param_default","fun":"const Variant material_get_param_default(RID material,String parameter)"},{"name":"material_get_shader","fun":"const RID material_get_shader(RID shader_material)"},{"name":"material_set_line_width","fun":" void material_set_line_width(RID material,float width)"},{"name":"material_set_next_pass","fun":" void material_set_next_pass(RID material,RID next_material)"},{"name":"material_set_param","fun":" void material_set_param(RID material,String parameter,Variant value)"},{"name":"material_set_render_priority","fun":" void material_set_render_priority(RID material,int priority)"},{"name":"material_set_shader","fun":" void material_set_shader(RID shader_material,RID shader)"},{"name":"mesh_add_surface_from_arrays","fun":" void mesh_add_surface_from_arrays(RID mesh,VisualServer.PrimitiveType primitive,Array arrays,Array blend_shapes=[  ],int compress_format=2194432)"},{"name":"mesh_clear","fun":" void mesh_clear(RID mesh)"},{"name":"mesh_create","fun":" RID mesh_create()"},{"name":"mesh_get_blend_shape_count","fun":"const int mesh_get_blend_shape_count(RID mesh)"},{"name":"mesh_get_blend_shape_mode","fun":"const int mesh_get_blend_shape_mode(RID mesh)"},{"name":"mesh_get_custom_aabb","fun":"const AABB mesh_get_custom_aabb(RID mesh)"},{"name":"mesh_get_surface_count","fun":"const int mesh_get_surface_count(RID mesh)"},{"name":"mesh_remove_surface","fun":" void mesh_remove_surface(RID mesh,int index)"},{"name":"mesh_set_blend_shape_count","fun":" void mesh_set_blend_shape_count(RID mesh,int amount)"},{"name":"mesh_set_blend_shape_mode","fun":" void mesh_set_blend_shape_mode(RID mesh,VisualServer.BlendShapeMode mode)"},{"name":"mesh_set_custom_aabb","fun":" void mesh_set_custom_aabb(RID mesh,AABB aabb)"},{"name":"mesh_surface_get_aabb","fun":"const AABB mesh_surface_get_aabb(RID mesh,int surface)"},{"name":"mesh_surface_get_array","fun":"const PoolByteArray mesh_surface_get_array(RID mesh,int surface)"},{"name":"mesh_surface_get_array_index_len","fun":"const int mesh_surface_get_array_index_len(RID mesh,int surface)"},{"name":"mesh_surface_get_array_len","fun":"const int mesh_surface_get_array_len(RID mesh,int surface)"},{"name":"mesh_surface_get_arrays","fun":"const Array mesh_surface_get_arrays(RID mesh,int surface)"},{"name":"mesh_surface_get_blend_shape_arrays","fun":"const Array mesh_surface_get_blend_shape_arrays(RID mesh,int surface)"},{"name":"mesh_surface_get_format","fun":"const int mesh_surface_get_format(RID mesh,int surface)"},{"name":"mesh_surface_get_format_offset","fun":"const int mesh_surface_get_format_offset(int format,int vertex_len,int index_len,int array_index)"},{"name":"mesh_surface_get_format_stride","fun":"const int mesh_surface_get_format_stride(int format,int vertex_len,int index_len,int array_index)"},{"name":"mesh_surface_get_index_array","fun":"const PoolByteArray mesh_surface_get_index_array(RID mesh,int surface)"},{"name":"mesh_surface_get_material","fun":"const RID mesh_surface_get_material(RID mesh,int surface)"},{"name":"mesh_surface_get_primitive_type","fun":"const int mesh_surface_get_primitive_type(RID mesh,int surface)"},{"name":"mesh_surface_get_skeleton_aabb","fun":"const Array mesh_surface_get_skeleton_aabb(RID mesh,int surface)"},{"name":"mesh_surface_set_material","fun":" void mesh_surface_set_material(RID mesh,int surface,RID material)"},{"name":"mesh_surface_update_region","fun":" void mesh_surface_update_region(RID mesh,int surface,int offset,PoolByteArray data)"},{"name":"multimesh_allocate","fun":" void multimesh_allocate(RID multimesh,int instances,VisualServer.MultimeshTransformFormat transform_format,VisualServer.MultimeshColorFormat color_format,VisualServer.MultimeshCustomDataFormat custom_data_format=0)"},{"name":"multimesh_create","fun":" RID multimesh_create()"},{"name":"multimesh_get_aabb","fun":"const AABB multimesh_get_aabb(RID multimesh)"},{"name":"multimesh_get_instance_count","fun":"const int multimesh_get_instance_count(RID multimesh)"},{"name":"multimesh_get_mesh","fun":"const RID multimesh_get_mesh(RID multimesh)"},{"name":"multimesh_get_visible_instances","fun":"const int multimesh_get_visible_instances(RID multimesh)"},{"name":"multimesh_instance_get_color","fun":"const Color multimesh_instance_get_color(RID multimesh,int index)"},{"name":"multimesh_instance_get_custom_data","fun":"const Color multimesh_instance_get_custom_data(RID multimesh,int index)"},{"name":"multimesh_instance_get_transform","fun":"const Transform multimesh_instance_get_transform(RID multimesh,int index)"},{"name":"multimesh_instance_get_transform_2d","fun":"const Transform2D multimesh_instance_get_transform_2d(RID multimesh,int index)"},{"name":"multimesh_instance_set_color","fun":" void multimesh_instance_set_color(RID multimesh,int index,Color color)"},{"name":"multimesh_instance_set_custom_data","fun":" void multimesh_instance_set_custom_data(RID multimesh,int index,Color custom_data)"},{"name":"multimesh_instance_set_transform","fun":" void multimesh_instance_set_transform(RID multimesh,int index,Transform transform)"},{"name":"multimesh_instance_set_transform_2d","fun":" void multimesh_instance_set_transform_2d(RID multimesh,int index,Transform2D transform)"},{"name":"multimesh_set_as_bulk_array","fun":" void multimesh_set_as_bulk_array(RID multimesh,PoolRealArray array)"},{"name":"multimesh_set_mesh","fun":" void multimesh_set_mesh(RID multimesh,RID mesh)"},{"name":"multimesh_set_visible_instances","fun":" void multimesh_set_visible_instances(RID multimesh,int visible)"},{"name":"omni_light_create","fun":" RID omni_light_create()"},{"name":"particles_create","fun":" RID particles_create()"},{"name":"particles_get_current_aabb","fun":" AABB particles_get_current_aabb(RID particles)"},{"name":"particles_get_emitting","fun":" bool particles_get_emitting(RID particles)"},{"name":"particles_is_inactive","fun":" bool particles_is_inactive(RID particles)"},{"name":"particles_request_process","fun":" void particles_request_process(RID particles)"},{"name":"particles_restart","fun":" void particles_restart(RID particles)"},{"name":"particles_set_amount","fun":" void particles_set_amount(RID particles,int amount)"},{"name":"particles_set_custom_aabb","fun":" void particles_set_custom_aabb(RID particles,AABB aabb)"},{"name":"particles_set_draw_order","fun":" void particles_set_draw_order(RID particles,VisualServer.ParticlesDrawOrder order)"},{"name":"particles_set_draw_pass_mesh","fun":" void particles_set_draw_pass_mesh(RID particles,int pass,RID mesh)"},{"name":"particles_set_draw_passes","fun":" void particles_set_draw_passes(RID particles,int count)"},{"name":"particles_set_emission_transform","fun":" void particles_set_emission_transform(RID particles,Transform transform)"},{"name":"particles_set_emitting","fun":" void particles_set_emitting(RID particles,bool emitting)"},{"name":"particles_set_explosiveness_ratio","fun":" void particles_set_explosiveness_ratio(RID particles,float ratio)"},{"name":"particles_set_fixed_fps","fun":" void particles_set_fixed_fps(RID particles,int fps)"},{"name":"particles_set_fractional_delta","fun":" void particles_set_fractional_delta(RID particles,bool enable)"},{"name":"particles_set_lifetime","fun":" void particles_set_lifetime(RID particles,float lifetime)"},{"name":"particles_set_one_shot","fun":" void particles_set_one_shot(RID particles,bool one_shot)"},{"name":"particles_set_pre_process_time","fun":" void particles_set_pre_process_time(RID particles,float time)"},{"name":"particles_set_process_material","fun":" void particles_set_process_material(RID particles,RID material)"},{"name":"particles_set_randomness_ratio","fun":" void particles_set_randomness_ratio(RID particles,float ratio)"},{"name":"particles_set_speed_scale","fun":" void particles_set_speed_scale(RID particles,float scale)"},{"name":"particles_set_use_local_coordinates","fun":" void particles_set_use_local_coordinates(RID particles,bool enable)"},{"name":"reflection_probe_create","fun":" RID reflection_probe_create()"},{"name":"reflection_probe_set_as_interior","fun":" void reflection_probe_set_as_interior(RID probe,bool enable)"},{"name":"reflection_probe_set_cull_mask","fun":" void reflection_probe_set_cull_mask(RID probe,int layers)"},{"name":"reflection_probe_set_enable_box_projection","fun":" void reflection_probe_set_enable_box_projection(RID probe,bool enable)"},{"name":"reflection_probe_set_enable_shadows","fun":" void reflection_probe_set_enable_shadows(RID probe,bool enable)"},{"name":"reflection_probe_set_extents","fun":" void reflection_probe_set_extents(RID probe,Vector3 extents)"},{"name":"reflection_probe_set_intensity","fun":" void reflection_probe_set_intensity(RID probe,float intensity)"},{"name":"reflection_probe_set_interior_ambient","fun":" void reflection_probe_set_interior_ambient(RID probe,Color color)"},{"name":"reflection_probe_set_interior_ambient_energy","fun":" void reflection_probe_set_interior_ambient_energy(RID probe,float energy)"},{"name":"reflection_probe_set_interior_ambient_probe_contribution","fun":" void reflection_probe_set_interior_ambient_probe_contribution(RID probe,float contrib)"},{"name":"reflection_probe_set_max_distance","fun":" void reflection_probe_set_max_distance(RID probe,float distance)"},{"name":"reflection_probe_set_origin_offset","fun":" void reflection_probe_set_origin_offset(RID probe,Vector3 offset)"},{"name":"reflection_probe_set_update_mode","fun":" void reflection_probe_set_update_mode(RID probe,VisualServer.ReflectionProbeUpdateMode mode)"},{"name":"request_frame_drawn_callback","fun":" void request_frame_drawn_callback(Object where,String method,Variant userdata)"},{"name":"scenario_create","fun":" RID scenario_create()"},{"name":"scenario_set_debug","fun":" void scenario_set_debug(RID scenario,VisualServer.ScenarioDebugMode debug_mode)"},{"name":"scenario_set_environment","fun":" void scenario_set_environment(RID scenario,RID environment)"},{"name":"scenario_set_fallback_environment","fun":" void scenario_set_fallback_environment(RID scenario,RID environment)"},{"name":"scenario_set_reflection_atlas_size","fun":" void scenario_set_reflection_atlas_size(RID scenario,int size,int subdiv)"},{"name":"set_boot_image","fun":" void set_boot_image(Image image,Color color,bool scale,bool use_filter=true)"},{"name":"set_debug_generate_wireframes","fun":" void set_debug_generate_wireframes(bool generate)"},{"name":"set_default_clear_color","fun":" void set_default_clear_color(Color color)"},{"name":"set_shader_time_scale","fun":" void set_shader_time_scale(float scale)"},{"name":"set_use_occlusion_culling","fun":" void set_use_occlusion_culling(bool enable)"},{"name":"shader_create","fun":" RID shader_create()"},{"name":"shader_get_code","fun":"const String shader_get_code(RID shader)"},{"name":"shader_get_default_texture_param","fun":"const RID shader_get_default_texture_param(RID shader,String name)"},{"name":"shader_get_param_list","fun":"const Array shader_get_param_list(RID shader)"},{"name":"shader_set_code","fun":" void shader_set_code(RID shader,String code)"},{"name":"shader_set_default_texture_param","fun":" void shader_set_default_texture_param(RID shader,String name,RID texture)"},{"name":"skeleton_allocate","fun":" void skeleton_allocate(RID skeleton,int bones,bool is_2d_skeleton=false)"},{"name":"skeleton_bone_get_transform","fun":"const Transform skeleton_bone_get_transform(RID skeleton,int bone)"},{"name":"skeleton_bone_get_transform_2d","fun":"const Transform2D skeleton_bone_get_transform_2d(RID skeleton,int bone)"},{"name":"skeleton_bone_set_transform","fun":" void skeleton_bone_set_transform(RID skeleton,int bone,Transform transform)"},{"name":"skeleton_bone_set_transform_2d","fun":" void skeleton_bone_set_transform_2d(RID skeleton,int bone,Transform2D transform)"},{"name":"skeleton_create","fun":" RID skeleton_create()"},{"name":"skeleton_get_bone_count","fun":"const int skeleton_get_bone_count(RID skeleton)"},{"name":"sky_create","fun":" RID sky_create()"},{"name":"sky_set_texture","fun":" void sky_set_texture(RID sky,RID cube_map,int radiance_size)"},{"name":"spot_light_create","fun":" RID spot_light_create()"},{"name":"sync","fun":" void sync()"},{"name":"texture_allocate","fun":" void texture_allocate(RID texture,int width,int height,int depth_3d,Image.Format format,VisualServer.TextureType type,int flags=7)"},{"name":"texture_bind","fun":" void texture_bind(RID texture,int number)"},{"name":"texture_create","fun":" RID texture_create()"},{"name":"texture_create_from_image","fun":" RID texture_create_from_image(Image image,int flags=7)"},{"name":"texture_debug_usage","fun":" Array texture_debug_usage()"},{"name":"texture_get_data","fun":"const Image texture_get_data(RID texture,int cube_side=0)"},{"name":"texture_get_depth","fun":"const int texture_get_depth(RID texture)"},{"name":"texture_get_flags","fun":"const int texture_get_flags(RID texture)"},{"name":"texture_get_format","fun":"const int texture_get_format(RID texture)"},{"name":"texture_get_height","fun":"const int texture_get_height(RID texture)"},{"name":"texture_get_path","fun":"const String texture_get_path(RID texture)"},{"name":"texture_get_texid","fun":"const int texture_get_texid(RID texture)"},{"name":"texture_get_type","fun":"const int texture_get_type(RID texture)"},{"name":"texture_get_width","fun":"const int texture_get_width(RID texture)"},{"name":"texture_set_data","fun":" void texture_set_data(RID texture,Image image,int layer=0)"},{"name":"texture_set_data_partial","fun":" void texture_set_data_partial(RID texture,Image image,int src_x,int src_y,int src_w,int src_h,int dst_x,int dst_y,int dst_mip,int layer=0)"},{"name":"texture_set_flags","fun":" void texture_set_flags(RID texture,int flags)"},{"name":"texture_set_path","fun":" void texture_set_path(RID texture,String path)"},{"name":"texture_set_shrink_all_x2_on_set_data","fun":" void texture_set_shrink_all_x2_on_set_data(bool shrink)"},{"name":"texture_set_size_override","fun":" void texture_set_size_override(RID texture,int width,int height,int depth)"},{"name":"textures_keep_original","fun":" void textures_keep_original(bool enable)"},{"name":"viewport_attach_camera","fun":" void viewport_attach_camera(RID viewport,RID camera)"},{"name":"viewport_attach_canvas","fun":" void viewport_attach_canvas(RID viewport,RID canvas)"},{"name":"viewport_attach_to_screen","fun":" void viewport_attach_to_screen(RID viewport,Rect2 rect=Rect2( 0, 0, 0, 0 ),int screen=0)"},{"name":"viewport_create","fun":" RID viewport_create()"},{"name":"viewport_detach","fun":" void viewport_detach(RID viewport)"},{"name":"viewport_get_render_info","fun":" int viewport_get_render_info(RID viewport,VisualServer.ViewportRenderInfo info)"},{"name":"viewport_get_texture","fun":"const RID viewport_get_texture(RID viewport)"},{"name":"viewport_remove_canvas","fun":" void viewport_remove_canvas(RID viewport,RID canvas)"},{"name":"viewport_set_active","fun":" void viewport_set_active(RID viewport,bool active)"},{"name":"viewport_set_canvas_stacking","fun":" void viewport_set_canvas_stacking(RID viewport,RID canvas,int layer,int sublayer)"},{"name":"viewport_set_canvas_transform","fun":" void viewport_set_canvas_transform(RID viewport,RID canvas,Transform2D offset)"},{"name":"viewport_set_clear_mode","fun":" void viewport_set_clear_mode(RID viewport,VisualServer.ViewportClearMode clear_mode)"},{"name":"viewport_set_debug_draw","fun":" void viewport_set_debug_draw(RID viewport,VisualServer.ViewportDebugDraw draw)"},{"name":"viewport_set_disable_3d","fun":" void viewport_set_disable_3d(RID viewport,bool disabled)"},{"name":"viewport_set_disable_environment","fun":" void viewport_set_disable_environment(RID viewport,bool disabled)"},{"name":"viewport_set_global_canvas_transform","fun":" void viewport_set_global_canvas_transform(RID viewport,Transform2D transform)"},{"name":"viewport_set_hdr","fun":" void viewport_set_hdr(RID viewport,bool enabled)"},{"name":"viewport_set_hide_canvas","fun":" void viewport_set_hide_canvas(RID viewport,bool hidden)"},{"name":"viewport_set_hide_scenario","fun":" void viewport_set_hide_scenario(RID viewport,bool hidden)"},{"name":"viewport_set_msaa","fun":" void viewport_set_msaa(RID viewport,VisualServer.ViewportMSAA msaa)"},{"name":"viewport_set_parent_viewport","fun":" void viewport_set_parent_viewport(RID viewport,RID parent_viewport)"},{"name":"viewport_set_render_direct_to_screen","fun":" void viewport_set_render_direct_to_screen(RID viewport,bool enabled)"},{"name":"viewport_set_scenario","fun":" void viewport_set_scenario(RID viewport,RID scenario)"},{"name":"viewport_set_shadow_atlas_quadrant_subdivision","fun":" void viewport_set_shadow_atlas_quadrant_subdivision(RID viewport,int quadrant,int subdivision)"},{"name":"viewport_set_shadow_atlas_size","fun":" void viewport_set_shadow_atlas_size(RID viewport,int size)"},{"name":"viewport_set_sharpen_intensity","fun":" void viewport_set_sharpen_intensity(RID viewport,float intensity)"},{"name":"viewport_set_size","fun":" void viewport_set_size(RID viewport,int width,int height)"},{"name":"viewport_set_transparent_background","fun":" void viewport_set_transparent_background(RID viewport,bool enabled)"},{"name":"viewport_set_update_mode","fun":" void viewport_set_update_mode(RID viewport,VisualServer.ViewportUpdateMode update_mode)"},{"name":"viewport_set_usage","fun":" void viewport_set_usage(RID viewport,VisualServer.ViewportUsage usage)"},{"name":"viewport_set_use_arvr","fun":" void viewport_set_use_arvr(RID viewport,bool use_arvr)"},{"name":"viewport_set_use_debanding","fun":" void viewport_set_use_debanding(RID viewport,bool debanding)"},{"name":"viewport_set_use_fxaa","fun":" void viewport_set_use_fxaa(RID viewport,bool fxaa)"},{"name":"viewport_set_vflip","fun":" void viewport_set_vflip(RID viewport,bool enabled)"}],"signals":[{"name":"frame_post_draw","fun":"frame_post_draw()"},{"name":"frame_pre_draw","fun":"frame_pre_draw()"}]}